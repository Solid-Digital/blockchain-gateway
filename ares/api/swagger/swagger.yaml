consumes:
- application/json
produces:
- application/json
swagger: "2.0"
info:
  description: No description
  title: Ares
  contact: {}
  version: 1.0.0
host: localhost:8080
basePath: /api/v1
paths:
  /:
    get:
      security: []
      description: Hello route
      consumes:
      - text/plain
      produces:
      - text/plain
      tags:
      - hello
      summary: Hello route
      operationId: Hello
      responses:
        "200":
          description: ' '
          schema:
            type: string
          headers:
            Content-Type:
              type: string
              default: text/plain; charset=utf-8
  /actions:
    get:
      security: []
      tags:
      - component
      summary: Get all public actions
      operationId: GetAllPublicActions
      responses:
        "200":
          description: Status 200
          schema:
            type: array
            items:
              $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
  /actions/{name}:
    get:
      security: []
      description: Get a public action component with all its versions
      tags:
      - component
      summary: Get Public Action Detail
      operationId: GetPublicAction
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: name
      in: path
      required: true
  /actions/{name}/versions/{version}:
    get:
      security: []
      tags:
      - component
      summary: Get Public Action version
      operationId: GetPublicActionVersion
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: name
      in: path
      required: true
    - type: string
      name: version
      in: path
      required: true
  /auth/login:
    post:
      security: []
      tags:
      - auth
      summary: Login User
      operationId: Login
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/LoginResponse'
        "401":
          description: Status 401
          schema:
            type: object
  /auth/logout:
    get:
      tags:
      - auth
      summary: Logout User
      operationId: Logout
      responses:
        "200":
          description: Status 200
        "500":
          description: Internal server error
          schema:
            type: object
  /auth/password/change:
    post:
      tags:
      - auth
      summary: Change the current user's password
      operationId: ChangeCurrentPassword
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ChangeCurrentPasswordRequest'
      responses:
        "201":
          description: Accepted
        "401":
          description: Unauthorized error
          schema:
            type: object
  /auth/password/reset:
    post:
      security: []
      tags:
      - auth
      summary: Reset Password
      operationId: ResetPassword
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ResetPasswordRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/ResetPasswordResponse'
        "401":
          description: Status 401
          schema:
            type: object
  /auth/password/reset/confirm:
    post:
      security: []
      tags:
      - auth
      summary: Confirm the password reset
      operationId: ConfirmResetPassword
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ConfirmResetPasswordRequest'
      responses:
        "200":
          description: Status 200
        "401":
          description: Status 401
          schema:
            type: object
  /auth/registration:
    post:
      security: []
      tags:
      - auth
      summary: Register New User
      operationId: CreateRegistration
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateRegistrationRequest'
      responses:
        "200":
          description: Status 200
        "500":
          description: Internal server error
          schema:
            type: object
  /auth/registration-redirect:
    post:
      security: []
      consumes:
      - application/x-www-form-urlencoded
      tags:
      - auth
      summary: Redirect for registration
      operationId: RedirectToRegistration
      responses:
        "200":
          description: Status 200
        "301":
          description: Redirect to connect registration page
        "500":
          description: Internal Service Error
          schema:
            type: object
  /auth/registration/confirm:
    post:
      security: []
      tags:
      - auth
      summary: Confirm the registration and email
      operationId: ConfirmRegistration
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ConfirmRegistrationRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/LoginResponse'
        "500":
          description: Internal server error
          schema:
            type: string
  /auth/user:
    get:
      description: Get the current user's profile.
      tags:
      - auth
      summary: Get Current User Profile
      operationId: GetCurrentUser
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetCurrentUserResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    put:
      description: Update the profile that is associated with the token used for the
        API call.
      tags:
      - auth
      summary: Update User Profile
      operationId: UpdateCurrentUser
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateCurrentUserRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetCurrentUserResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    delete:
      description: Archive the profile that is associated with the token used for
        the API call.
      tags:
      - auth
      summary: Delete the current user
      operationId: DeleteCurrentUser
      responses:
        "204":
          description: Deleted
        "500":
          description: Internal server error
          schema:
            type: object
  /orgs:
    get:
      tags:
      - organization
      summary: Get all organizations
      operationId: GetAllOrganizations
      responses:
        "200":
          description: Status 200
          schema:
            type: array
            items:
              $ref: '#/definitions/GetOrganizationResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    post:
      tags:
      - organization
      summary: Create Organization
      operationId: CreateOrganization
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateOrganizationRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/GetOrganizationResponse'
        "500":
          description: Internal server error
          schema:
            type: object
  /orgs/{orgName}:
    get:
      tags:
      - organization
      summary: Get organization
      operationId: GetOrganization
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetOrganizationResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    put:
      tags:
      - organization
      summary: Update organization
      operationId: UpdateOrganization
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateOrganizationRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetOrganizationResponse'
        "401":
          description: Permission denied
          schema:
            type: object
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
  /orgs/{orgName}/actions:
    get:
      tags:
      - component
      summary: Get all actions in this organization
      operationId: GetAllActions
      parameters:
      - type: boolean
        name: available
        in: query
      responses:
        "200":
          description: Status 200
          schema:
            type: array
            items:
              $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    post:
      tags:
      - component
      summary: Create new action
      operationId: CreateAction
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateComponentRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
  /orgs/{orgName}/actions/{name}:
    get:
      description: Get a action component with all its versions
      tags:
      - component
      summary: Get Action Detail
      operationId: GetAction
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    put:
      description: Update a action component
      tags:
      - component
      summary: Update Action
      operationId: UpdateAction
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateComponentRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: name
      in: path
      required: true
  /orgs/{orgName}/actions/{name}/versions:
    post:
      description: If the action that this version belongs to doesn't already exist,
        it will be created
      consumes:
      - multipart/form-data
      tags:
      - component
      summary: Create action version
      operationId: CreateActionVersion
      parameters:
      - type: string
        x-order: 1
        description: version string for this action version
        name: version
        in: formData
      - type: string
        x-order: 2
        description: short description of this action version
        name: description
        in: formData
      - type: string
        x-order: 3
        description: readme for this action version
        name: readme
        in: formData
      - type: string
        x-order: 4
        description: default config for this action version
        name: exampleConfig
        in: formData
      - type: file
        x-order: 5
        description: the action version file
        name: actionFile
        in: formData
      - type: string
        description: json encoded string containing the input specification of the
          action
        name: inputSchema
        in: formData
      - type: string
        description: json encoded string containing the output specification of the
          action
        name: outputSchema
        in: formData
      - type: boolean
        description: describes whether or not this action version is public
        name: public
        in: formData
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: name
      in: path
      required: true
  /orgs/{orgName}/actions/{name}/versions/{version}:
    get:
      tags:
      - component
      summary: Get Action version
      operationId: GetActionVersion
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    patch:
      tags:
      - component
      summary: Update action version
      operationId: UpdateActionVersion
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateComponentVersionRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: name
      in: path
      required: true
    - type: string
      name: version
      in: path
      required: true
  /orgs/{orgName}/bases:
    get:
      tags:
      - component
      summary: Get all bases in this organization
      operationId: GetAllBases
      parameters:
      - type: boolean
        name: available
        in: query
      responses:
        "200":
          description: Status 200
          schema:
            type: array
            items:
              $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    post:
      tags:
      - component
      summary: Create new base
      operationId: CreateBase
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateComponentRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
  /orgs/{orgName}/bases/{name}:
    get:
      description: Get a base component with all its versions
      tags:
      - component
      summary: Get Base Detail
      operationId: GetBase
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    put:
      description: Update a base component
      tags:
      - component
      summary: Update Base
      operationId: UpdateBase
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateComponentRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: name
      in: path
      required: true
  /orgs/{orgName}/bases/{name}/versions:
    post:
      description: If the base that this version belongs to doesn't already exist,
        it will be created
      tags:
      - component
      summary: Create base version
      operationId: CreateBaseVersion
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateBaseVersionRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetBaseVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: name
      in: path
      required: true
  /orgs/{orgName}/bases/{name}/versions/{version}:
    get:
      tags:
      - component
      summary: Get Base version
      operationId: GetBaseVersion
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetBaseVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    patch:
      tags:
      - component
      summary: Update base version
      operationId: UpdateBaseVersion
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateBaseVersionRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetBaseVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: name
      in: path
      required: true
    - type: string
      name: version
      in: path
      required: true
  /orgs/{orgName}/members:
    get:
      description: Get all members of an organization
      tags:
      - organization
      summary: Get all members
      operationId: GetAllMembers
      responses:
        "200":
          description: Status 200
          schema:
            type: array
            items:
              $ref: '#/definitions/GetMemberResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    post:
      tags:
      - organization
      summary: Invite a user to the organization
      operationId: InviteMember
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/InviteMemberRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/InviteMemberResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
  /orgs/{orgName}/members/{email}:
    get:
      tags:
      - organization
      summary: Get Member Detail
      operationId: GetMember
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetMemberResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    delete:
      tags:
      - organization
      summary: Remove member from Organization
      operationId: RemoveMember
      responses:
        "204":
          description: Deleted
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      format: email
      name: email
      in: path
      required: true
  /orgs/{orgName}/members/{email}/roles:
    put:
      tags:
      - organization
      summary: Set roles for member
      operationId: SetMemberRoles
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetMemberRolesRequest'
      responses:
        "200":
          description: Status 200
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      format: email
      name: email
      in: path
      required: true
  /orgs/{orgName}/pipelines:
    get:
      description: Get all pipelines for the organization
      tags:
      - pipeline
      summary: Get all Pipelines
      operationId: GetAllPipelines
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetAllPipelinesResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    post:
      tags:
      - pipeline
      summary: Create a new Pipeline
      operationId: CreatePipeline
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreatePipelineRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetPipelineResponse'
        "409":
          description: Pipeline name already exists
          schema:
            type: object
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
  /orgs/{orgName}/pipelines/{pipelineName}:
    get:
      description: Get the pipeline with all its different configurations and deployments.
      tags:
      - pipeline
      summary: Get Pipeline Detail
      operationId: GetPipeline
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetPipelineResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    put:
      tags:
      - pipeline
      summary: Update Pipeline
      operationId: UpdatePipeline
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdatePipelineRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetPipelineResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    delete:
      tags:
      - pipeline
      summary: Delete Pipeline
      operationId: DeletePipeline
      responses:
        "204":
          description: Deleted
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: pipelineName
      in: path
      required: true
  /orgs/{orgName}/pipelines/{pipelineName}/configurations:
    post:
      description: A new configuration is created by auto-incrementing the latest
        version by 1.
      tags:
      - pipeline
      summary: Save draft as new configuration
      operationId: SaveDraftConfigurationAsNew
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SaveDraftConfigurationAsNewRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetConfigurationResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: pipelineName
      in: path
      required: true
  /orgs/{orgName}/pipelines/{pipelineName}/configurations/draft:
    get:
      tags:
      - pipeline
      summary: Get draft configuration
      operationId: GetDraftConfiguration
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetConfigurationResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    put:
      description: 'The latest configuration version is not stored as a numbered version
        yet and is the only configuration that can be updated. '
      tags:
      - pipeline
      summary: Update draft configuration
      operationId: UpdateDraftConfiguration
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateDraftConfigurationRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetConfigurationResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: pipelineName
      in: path
      required: true
  /orgs/{orgName}/pipelines/{pipelineName}/configurations/{revision}:
    get:
      tags:
      - pipeline
      summary: Get configuration
      operationId: GetConfiguration
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetConfigurationResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: pipelineName
      in: path
      required: true
    - type: integer
      name: revision
      in: path
      required: true
  /orgs/{orgName}/pipelines/{pipelineName}/environments/{envName}/deployment:
    get:
      tags:
      - pipeline
      summary: Get the pipeline deployment for an environment
      operationId: GetDeployment
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetDeploymentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    put:
      description: Deploy a pipeline configuration to a specific environment within
        the pipeline context
      tags:
      - pipeline
      summary: Deploy configuration to environment
      operationId: DeployConfiguration
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/DeployConfigurationRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetDeploymentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    delete:
      tags:
      - pipeline
      summary: Delete deployment to environment
      operationId: RemoveDeployment
      responses:
        "204":
          description: Deleted
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: pipelineName
      in: path
      required: true
    - type: string
      name: envName
      in: path
      required: true
  /orgs/{orgName}/pipelines/{pipelineName}/environments/{envName}/deployment/logs:
    get:
      tags:
      - pipeline
      summary: Logs for pipeline deployment
      operationId: GetDeploymentLogs
      parameters:
      - type: string
        name: from
        in: query
      - type: string
        name: to
        in: query
      - type: string
        name: limit
        in: query
      responses:
        "200":
          description: Status 200
          schema:
            type: array
            items:
              $ref: '#/definitions/LogLine'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: pipelineName
      in: path
      required: true
    - type: string
      name: envName
      in: path
      required: true
  /orgs/{orgName}/pipelines/{pipelineName}/environments/{envName}/vars:
    get:
      tags:
      - pipeline
      summary: Get the variables for a pipeline environment
      operationId: GetAllEnvironmentVariables
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetAllEnvironmentVariablesResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    post:
      tags:
      - pipeline
      summary: Create a new variable for a pipeline environment
      operationId: CreateEnvironmentVariable
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateEnvironmentVariableRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetEnvironmentVariableResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: pipelineName
      in: path
      required: true
    - type: string
      name: envName
      in: path
      required: true
  /orgs/{orgName}/pipelines/{pipelineName}/environments/{envName}/vars/{varID}:
    put:
      tags:
      - pipeline
      summary: Update a variable for a pipeline environment
      operationId: UpdateEnvironmentVariable
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateEnvironmentVariablesRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetEnvironmentVariableResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    delete:
      tags:
      - pipeline
      summary: Delete a variable for a pipeline environment
      operationId: DeleteEnvironmentVariable
      responses:
        "204":
          description: Deleted
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: pipelineName
      in: path
      required: true
    - type: string
      name: envName
      in: path
      required: true
    - type: integer
      name: varID
      in: path
      required: true
  /orgs/{orgName}/triggers:
    get:
      tags:
      - component
      summary: Get all triggers in this organization
      operationId: GetAllTriggers
      parameters:
      - type: boolean
        name: available
        in: query
      responses:
        "200":
          description: Status 200
          schema:
            type: array
            items:
              $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    post:
      tags:
      - component
      summary: Create new trigger
      operationId: CreateTrigger
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateComponentRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
  /orgs/{orgName}/triggers/{name}:
    get:
      description: Get a trigger component with all its versions
      tags:
      - component
      summary: Get Trigger Detail
      operationId: GetTrigger
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    put:
      description: Update a trigger component
      tags:
      - component
      summary: Update Trigger
      operationId: UpdateTrigger
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateComponentRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: name
      in: path
      required: true
  /orgs/{orgName}/triggers/{name}/versions:
    post:
      description: If the trigger that this version belongs to doesn't already exist,
        it will be created
      consumes:
      - multipart/form-data
      tags:
      - component
      summary: Create trigger version
      operationId: CreateTriggerVersion
      parameters:
      - type: string
        x-order: 1
        description: version string for this trigger version
        name: version
        in: formData
      - type: string
        x-order: 2
        description: short description of this trigger version
        name: description
        in: formData
      - type: string
        x-order: 3
        description: readme for this trigger version
        name: readme
        in: formData
      - type: string
        x-order: 4
        description: default config for this trigger version
        name: exampleConfig
        in: formData
      - type: file
        x-order: 5
        description: the trigger version file
        name: triggerFile
        in: formData
      - type: string
        description: json encoded string containing the input specification of the
          trigger
        name: inputSchema
        in: formData
      - type: string
        description: json encoded string containing the output specification of the
          trigger
        name: outputSchema
        in: formData
      - type: boolean
        description: describes whether or not this trigger version is public
        name: public
        in: formData
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: name
      in: path
      required: true
  /orgs/{orgName}/triggers/{name}/versions/{version}:
    get:
      tags:
      - component
      summary: Get Trigger version
      operationId: GetTriggerVersion
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    patch:
      tags:
      - component
      summary: Update trigger version
      operationId: UpdateTriggerVersion
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateComponentVersionRequest'
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: orgName
      in: path
      required: true
    - type: string
      name: name
      in: path
      required: true
    - type: string
      name: version
      in: path
      required: true
  /triggers:
    get:
      security: []
      tags:
      - component
      summary: Get all public triggers
      operationId: GetAllPublicTriggers
      responses:
        "200":
          description: Status 200
          schema:
            type: array
            items:
              $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
  /triggers/{name}:
    get:
      security: []
      description: Get a public trigger component with all its versions
      tags:
      - component
      summary: Get Public Trigger Detail
      operationId: GetPublicTrigger
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: name
      in: path
      required: true
  /triggers/{name}/versions/{version}:
    get:
      security: []
      tags:
      - component
      summary: Get Public Trigger version
      operationId: GetPublicTriggerVersion
      responses:
        "200":
          description: Status 200
          schema:
            $ref: '#/definitions/GetComponentVersionResponse'
        "500":
          description: Internal server error
          schema:
            type: object
    parameters:
    - type: string
      name: name
      in: path
      required: true
    - type: string
      name: version
      in: path
      required: true
definitions:
  ChangeCurrentPasswordRequest:
    type: object
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
  ComponentConfiguration:
    type: object
    required:
    - component
    - componentVersion
    - initConfiguration
    - messageConfiguration
    properties:
      component:
        $ref: '#/definitions/GetComponentResponse'
      componentVersion:
        $ref: '#/definitions/GetComponentVersionResponse'
      initConfiguration:
        type: string
      messageConfiguration:
        type: string
      name:
        type: string
  ConfirmRegistrationRequest:
    type: object
    properties:
      fullName:
        type: string
      password:
        type: string
      token:
        type: string
  ConfirmResetPasswordRequest:
    type: object
    properties:
      password:
        type: string
      recoveryCode:
        type: string
  CreateBaseVersionRequest:
    type: object
    properties:
      description:
        type: string
      dockerImageRef:
        type: string
      entrypoint:
        type: string
      public:
        type: boolean
        x-nullable: true
      readme:
        type: string
      version:
        type: string
  CreateComponentRequest:
    type: object
    properties:
      description:
        type: string
      displayName:
        type: string
      name:
        type: string
  CreateEnvironmentVariableRequest:
    type: object
    properties:
      key:
        type: string
        pattern: ^[-._a-zA-Z][-._a-zA-Z0-9]*$
        x-omitempty: false
      secret:
        type: boolean
        x-omitempty: false
      value:
        type: string
        x-omitempty: false
  CreateOrganizationRequest:
    type: object
    properties:
      displayName:
        type: string
      name:
        type: string
    example:
      displayName: Demo Org
      name: demo-org
  CreatePipelineRequest:
    type: object
    properties:
      description:
        type: string
      displayName:
        type: string
      name:
        type: string
        maxLength: 50
  CreateRegistrationRequest:
    type: object
    required:
    - email
    - organizationName
    - organizationDisplayName
    properties:
      email:
        type: string
        format: email
      organizationDisplayName:
        type: string
      organizationName:
        type: string
      registrationReference:
        description: reference object for any billing provider or marketplace
        type: object
        properties:
          source:
            type: string
          token:
            type: string
  CreatedBy:
    type: object
    properties:
      fullName:
        type: string
        x-order: 2
      id:
        type: integer
        x-order: 1
  DeployConfigurationRequest:
    type: object
    default:
      configurationRevision: -1
    required:
    - configurationRevision
    properties:
      configurationRevision:
        type: integer
        x-order: 0
      replicas:
        type: integer
        minimum: 0
  ErrorResponse:
    type: object
    properties:
      code:
        type: integer
        x-order: 2
      message:
        type: string
        x-order: 3
      namedErrors:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
        x-order: 4
      requestID:
        type: string
        x-order: 5
      status:
        type: integer
        x-order: 0
      statusText:
        type: string
        x-order: 1
  GetAllEnvironmentVariablesResponse:
    type: array
    items:
      $ref: '#/definitions/GetEnvironmentVariableResponse'
  GetAllPipelinesResponse:
    type: array
    items:
      $ref: '#/definitions/GetPipelineResponse'
  GetBaseVersionResponse:
    type: object
    required:
    - id
    - version
    - createdAt
    - createdBy
    - updatedAt
    - updatedBy
    - description
    - readme
    - dockerImageRef
    - entrypoint
    - public
    - available
    properties:
      available:
        type: boolean
        x-order: 8
      createdAt:
        type: string
        format: date-time
      createdBy:
        $ref: '#/definitions/CreatedBy'
      description:
        type: string
        x-order: 3
      dockerImageRef:
        type: string
        x-order: 5
      entrypoint:
        type: string
        x-order: 6
      id:
        type: integer
        x-order: 1
      public:
        type: boolean
        x-order: 7
      readme:
        type: string
        x-order: 4
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        $ref: '#/definitions/UpdatedBy'
      version:
        type: string
        x-order: 2
  GetComponentResponse:
    type: object
    required:
    - id
    - developerID
    - createdAt
    - createdBy
    - updatedAt
    - updatedBy
    - name
    - displayName
    - description
    - public
    - available
    - versions
    properties:
      available:
        type: boolean
        x-order: 7
      createdAt:
        type: string
        format: date-time
      createdBy:
        $ref: '#/definitions/CreatedBy'
      description:
        type: string
        x-order: 5
      developerID:
        type: integer
        x-order: 2
      displayName:
        type: string
        x-order: 4
      id:
        type: integer
        x-order: 1
      name:
        type: string
        x-order: 3
      public:
        type: boolean
        x-order: 6
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        $ref: '#/definitions/UpdatedBy'
      versions:
        type: array
        items:
          type: string
        x-order: 8
  GetComponentVersionResponse:
    type: object
    required:
    - id
    - version
    - releaseMessage
    - createdAt
    - createdBy
    - updatedAt
    - updatedBy
    - readme
    - exampleConfig
    - inputSchema
    - outputSchema
    - public
    - available
    properties:
      available:
        type: boolean
        x-order: 8
      createdAt:
        type: string
        format: date-time
      createdBy:
        $ref: '#/definitions/CreatedBy'
      description:
        type: string
        x-order: 2
      exampleConfig:
        type: string
        x-order: 4
      id:
        type: integer
        x-order: 0
      inputSchema:
        type: array
        items:
          type: string
        x-order: 5
      outputSchema:
        type: array
        items:
          type: string
        x-order: 6
      public:
        type: boolean
        x-order: 7
      readme:
        type: string
        x-order: 3
      releaseMessage:
        type: string
        x-order: 2
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        $ref: '#/definitions/UpdatedBy'
      version:
        type: string
        x-order: 1
  GetConfigurationResponse:
    type: object
    required:
    - id
    - revision
    - createdAt
    - createdBy
    - updatedAt
    - updatedBy
    - base
    - trigger
    - actions
    properties:
      actions:
        type: array
        items:
          $ref: '#/definitions/ComponentConfiguration'
        x-order: 4
      base:
        x-order: 2
        $ref: '#/definitions/ComponentConfiguration'
      commitMessage:
        type: string
      createdAt:
        type: string
        format: date-time
      createdBy:
        $ref: '#/definitions/CreatedBy'
      id:
        type: integer
        x-order: 0
      revision:
        type: integer
        x-order: 1
      trigger:
        x-order: 3
        $ref: '#/definitions/ComponentConfiguration'
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        $ref: '#/definitions/UpdatedBy'
  GetCurrentUserResponse:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
        x-order: 4
      defaultOrganization:
        type: string
        x-order: 5
      email:
        type: string
        x-order: 3
      fullName:
        type: string
        x-order: 2
      id:
        type: integer
        x-order: 1
      roles:
        description: Roles is map[org][role]bool
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: boolean
  GetDeploymentResponse:
    type: object
    required:
    - id
    - url
    - host
    - image
    - path
    - configuration
    - createdAt
    - createdBy
    - updatedAt
    - updatedBy
    - desiredReplicas
    - availableReplicas
    - dirty
    properties:
      availableReplicas:
        type: integer
        x-order: 9
      configuration:
        $ref: '#/definitions/PipelineConfigurationRevision'
      createdAt:
        type: string
        format: date-time
        x-order: 4
      createdBy:
        x-order: 5
        $ref: '#/definitions/CreatedBy'
      desiredReplicas:
        type: integer
        x-order: 8
      dirty:
        type: boolean
      host:
        type: string
      id:
        type: integer
        x-order: 0
      image:
        type: string
      path:
        type: string
      updatedAt:
        type: string
        format: date-time
        x-order: 6
      updatedBy:
        x-order: 7
        $ref: '#/definitions/UpdatedBy'
      url:
        type: string
  GetEnvironmentVariableResponse:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
        x-order: 5
      createdBy:
        x-order: 6
        $ref: '#/definitions/CreatedBy'
      deployed:
        type: boolean
        x-order: 9
      id:
        type: integer
        x-order: 1
      key:
        type: string
        x-omitempty: false
        x-order: 2
      secret:
        type: boolean
        x-omitempty: false
        x-order: 4
      updatedAt:
        type: string
        format: date-time
        x-order: 7
      updatedBy:
        x-order: 8
        $ref: '#/definitions/UpdatedBy'
      value:
        type: string
        x-omitempty: false
        x-order: 3
  GetMemberResponse:
    description: An organization member representation for user profile.
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      email:
        type: string
      fullName:
        type: string
      id:
        type: integer
      roles:
        description: Roles is map[role]bool
        type: object
        additionalProperties:
          type: boolean
  GetOrganizationResponse:
    type: object
    properties:
      displayName:
        type: string
      id:
        type: integer
      name:
        type: string
  GetPipelineResponse:
    type: object
    required:
    - id
    - displayName
    - name
    - description
    - status
    - createdAt
    - createdBy
    - updatedAt
    - updatedBy
    - configurationRevisions
    - environments
    properties:
      configurationRevisions:
        type: array
        items:
          $ref: '#/definitions/PipelineConfigurationRevision'
      createdAt:
        type: string
        format: date-time
      createdBy:
        $ref: '#/definitions/CreatedBy'
      description:
        type: string
        x-order: 3
      displayName:
        type: string
        x-order: 1
      environments:
        type: array
        items:
          $ref: '#/definitions/PipelineEnvironment'
        x-order: 5
      id:
        type: integer
        x-order: 0
      name:
        type: string
        x-order: 2
      status:
        type: string
        x-order: 4
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        $ref: '#/definitions/UpdatedBy'
  IOSchema:
    type: object
    properties:
      items:
        $ref: '#/definitions/IOSchema'
      name:
        type: string
      properties:
        type: array
        items:
          $ref: '#/definitions/IOSchema'
        x-omitempty: true
      type:
        type: string
  InviteMemberRequest:
    type: object
    properties:
      email:
        type: string
        format: email
      roles:
        description: Roles is map[role]bool
        type: object
        additionalProperties:
          type: boolean
  InviteMemberResponse:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      email:
        type: string
      fullName:
        type: string
      id:
        type: integer
      inviteID:
        type: string
      roles:
        description: Roles is map[role]bool
        type: object
        additionalProperties:
          type: boolean
  LogLine:
    type: object
    properties:
      caller:
        type: string
      function:
        type: string
      instanceID:
        type: string
      level:
        type: string
      text:
        type: string
      time:
        type: string
      timestamp:
        type: integer
  LoginRequest:
    type: object
    required:
    - email
    - password
    properties:
      email:
        type: string
        format: email
      password:
        type: string
  LoginResponse:
    type: object
    properties:
      defaultOrganization:
        type: string
      token:
        type: string
      userID:
        type: integer
  PipelineConfigurationRevision:
    type: object
    properties:
      commitMessage:
        type: string
      revision:
        type: integer
  PipelineEnvironment:
    type: object
    properties:
      deployment:
        $ref: '#/definitions/GetDeploymentResponse'
      name:
        type: string
      variables:
        type: array
        items:
          $ref: '#/definitions/GetEnvironmentVariableResponse'
  ResetPasswordRequest:
    type: object
    properties:
      email:
        type: string
        format: email
  ResetPasswordResponse:
    type: object
    properties:
      requestID:
        type: string
  SaveDraftConfigurationAsNewRequest:
    type: object
    properties:
      commitMessage:
        type: string
  SetMemberRolesRequest:
    type: object
    properties:
      roles:
        description: Roles is map[role]bool
        type: object
        additionalProperties:
          type: boolean
  Token:
    type: object
    properties:
      expiration:
        type: integer
      raw:
        type: string
  UpdateBaseVersionRequest:
    type: object
    properties:
      description:
        type: string
        x-nullable: true
      public:
        description: Can be updated only by admins
        type: boolean
        x-nullable: true
      readme:
        type: string
        x-nullable: true
  UpdateComponentConfiguration:
    type: object
    required:
    - id
    - initConfiguration
    properties:
      id:
        type: integer
        x-order: 0
      initConfiguration:
        type: string
        x-order: 2
      messageConfiguration:
        type: string
        x-order: 3
      name:
        type: string
        x-order: 1
  UpdateComponentRequest:
    type: object
    properties:
      description:
        type: string
      displayName:
        type: string
  UpdateComponentVersionRequest:
    type: object
    properties:
      description:
        type: string
        x-nullable: true
      exampleConfig:
        type: string
        x-nullable: true
      inputSchema:
        description: json encoded string containing the input specification of the
          trigger
        type: array
        items:
          type: string
        x-nullable: true
      outputSchema:
        description: json encoded string containing the output specification of the
          trigger
        type: array
        items:
          type: string
        x-nullable: true
      public:
        description: Can be updated only by admins
        type: boolean
        x-nullable: true
      readme:
        type: string
        x-nullable: true
  UpdateCurrentUserRequest:
    type: object
    properties:
      email:
        type: string
        format: email
      fullName:
        type: string
  UpdateDraftConfigurationRequest:
    type: object
    properties:
      actions:
        type: array
        items:
          $ref: '#/definitions/UpdateComponentConfiguration'
      base:
        $ref: '#/definitions/UpdateComponentConfiguration'
      trigger:
        $ref: '#/definitions/UpdateComponentConfiguration'
  UpdateEnvironmentVariablesRequest:
    type: object
    properties:
      index:
        type: integer
        x-nullable: true
      key:
        type: string
        pattern: ^[-._a-zA-Z][-._a-zA-Z0-9]*$
        x-nullable: true
      value:
        type: string
        x-nullable: true
  UpdateOrganizationRequest:
    type: object
    properties:
      displayName:
        type: string
    example:
      displayName: Demo Org
  UpdatePipelineRequest:
    type: object
    properties:
      description:
        type: string
      displayName:
        type: string
  UpdatedBy:
    type: object
    properties:
      fullName:
        type: string
        x-order: 2
      id:
        type: integer
        x-order: 1
  User:
    type: object
    properties:
      email:
        type: string
        format: email
      id:
        type: integer
      token:
        $ref: '#/definitions/Token'
securityDefinitions:
  Token authentication:
    type: apiKey
    name: Authorization
    in: header
security:
- Token authentication: []
tags:
- name: hello
- name: auth
- name: organization
- name: pipeline
- name: component
