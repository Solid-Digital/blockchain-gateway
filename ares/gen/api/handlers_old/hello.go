// Code generated by go-swagger; DO NOT EDIT.

package handlers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/google/wire"
	"github.com/unchainio/interfaces/logger"

	"bitbucket.org/unchain/ares/gen/api/operations/hello"

	"bitbucket.org/unchain/ares/gen/api"
	"bitbucket.org/unchain/ares/pkg/ares"
	"github.com/go-openapi/runtime/middleware"
)

var _ api.HelloAPI = &HelloHandler{}

var HelloSet = wire.NewSet(NewHelloHandler, wire.Bind(new(api.HelloAPI), new(HelloHandler)))

// FIXME(go-swagger): Add the required parameters for NewHello
// NewHelloHandler
func NewHelloHandler(service ares.HelloService, log logger.Logger) *HelloHandler {
	return &HelloHandler{
		service: service,
		log:     log,
	}
}

// FIXME(go-swagger): Add the required fields for HelloHandler
// HelloHandler is an empty implementation of the api.HelloAPI interface.
type HelloHandler struct {
	service ares.HelloService
	log     logger.Logger
}

// Hello Hello route
func (h *HelloHandler) Hello(params hello.HelloParams) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.Hello()

	// ret, err := h.service.Hello()

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.Hello(params) to &hello.HelloOK
	//return &hello.HelloOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation Hello has not yet been implemented")
}
