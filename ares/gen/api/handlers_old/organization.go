// Code generated by go-swagger; DO NOT EDIT.

package handlers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/google/wire"
	"github.com/unchainio/interfaces/logger"

	"bitbucket.org/unchain/ares/gen/api/operations/organization"

	dto "bitbucket.org/unchain/ares/gen/dto"

	"bitbucket.org/unchain/ares/gen/api"
	"bitbucket.org/unchain/ares/pkg/ares"
	"github.com/go-openapi/runtime/middleware"
)

var _ api.OrganizationAPI = &OrganizationHandler{}

var OrganizationSet = wire.NewSet(NewOrganizationHandler, wire.Bind(new(api.OrganizationAPI), new(OrganizationHandler)))

// FIXME(go-swagger): Add the required parameters for NewOrganization
// NewOrganizationHandler
func NewOrganizationHandler(service ares.OrganizationService, log logger.Logger) *OrganizationHandler {
	return &OrganizationHandler{
		service: service,
		log:     log,
	}
}

// FIXME(go-swagger): Add the required fields for OrganizationHandler
// OrganizationHandler is an empty implementation of the api.OrganizationAPI interface.
type OrganizationHandler struct {
	service ares.OrganizationService
	log     logger.Logger
}

// CreateOrganization
func (h *OrganizationHandler) CreateOrganization(params organization.CreateOrganizationParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.CreateOrganization()

	// ret, err := h.service.CreateOrganization(params.Body)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &organization.CreateOrganizationInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.CreateOrganization(params) to &organization.CreateOrganizationCreated
	//return &organization.CreateOrganizationCreated {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation CreateOrganization has not yet been implemented")
}

// GetAllMembers Get all members of an organization
func (h *OrganizationHandler) GetAllMembers(params organization.GetAllMembersParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAllMembers()

	// ret, err := h.service.GetAllMembers(params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &organization.GetAllMembersInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAllMembers(params) to &organization.GetAllMembersOK
	//return &organization.GetAllMembersOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAllMembers has not yet been implemented")
}

// GetAllOrganizations
func (h *OrganizationHandler) GetAllOrganizations(params organization.GetAllOrganizationsParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAllOrganizations()

	// ret, err := h.service.GetAllOrganizations()

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &organization.GetAllOrganizationsInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAllOrganizations(params) to &organization.GetAllOrganizationsOK
	//return &organization.GetAllOrganizationsOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAllOrganizations has not yet been implemented")
}

// GetMember
func (h *OrganizationHandler) GetMember(params organization.GetMemberParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetMember()

	// ret, err := h.service.GetMember(params.Email, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &organization.GetMemberInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetMember(params) to &organization.GetMemberOK
	//return &organization.GetMemberOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetMember has not yet been implemented")
}

// GetOrganization
func (h *OrganizationHandler) GetOrganization(params organization.GetOrganizationParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetOrganization()

	// ret, err := h.service.GetOrganization(params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &organization.GetOrganizationInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetOrganization(params) to &organization.GetOrganizationOK
	//return &organization.GetOrganizationOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetOrganization has not yet been implemented")
}

// InviteMember
func (h *OrganizationHandler) InviteMember(params organization.InviteMemberParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.InviteMember()

	// ret, err := h.service.InviteMember(params.Body, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &organization.InviteMemberInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.InviteMember(params) to &organization.InviteMemberOK
	//return &organization.InviteMemberOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation InviteMember has not yet been implemented")
}

// RemoveMember
func (h *OrganizationHandler) RemoveMember(params organization.RemoveMemberParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.RemoveMember()

	// ret, err := h.service.RemoveMember(params.Email, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &organization.RemoveMemberInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.RemoveMember(params) to &organization.RemoveMemberNoContent
	//return &organization.RemoveMemberNoContent {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation RemoveMember has not yet been implemented")
}

// SetMemberRoles
func (h *OrganizationHandler) SetMemberRoles(params organization.SetMemberRolesParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.SetMemberRoles()

	// ret, err := h.service.SetMemberRoles(params.Body, params.Email, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &organization.SetMemberRolesInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.SetMemberRoles(params) to &organization.SetMemberRolesOK
	//return &organization.SetMemberRolesOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation SetMemberRoles has not yet been implemented")
}

// UpdateOrganization
func (h *OrganizationHandler) UpdateOrganization(params organization.UpdateOrganizationParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdateOrganization()

	// ret, err := h.service.UpdateOrganization(params.Body, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 401 - Permission denied
	// return &organization.UpdateOrganizationUnauthorized {
	//    Payload: errors.Message(err, 1),
	//}
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &organization.UpdateOrganizationInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdateOrganization(params) to &organization.UpdateOrganizationOK
	//return &organization.UpdateOrganizationOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdateOrganization has not yet been implemented")
}
