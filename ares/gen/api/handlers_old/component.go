// Code generated by go-swagger; DO NOT EDIT.

package handlers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/google/wire"
	"github.com/unchainio/interfaces/logger"

	"bitbucket.org/unchain/ares/gen/api/operations/component"

	dto "bitbucket.org/unchain/ares/gen/dto"

	"bitbucket.org/unchain/ares/gen/api"
	"bitbucket.org/unchain/ares/pkg/ares"
	"github.com/go-openapi/runtime/middleware"
)

var _ api.ComponentAPI = &ComponentHandler{}

var ComponentSet = wire.NewSet(NewComponentHandler, wire.Bind(new(api.ComponentAPI), new(ComponentHandler)))

// FIXME(go-swagger): Add the required parameters for NewComponent
// NewComponentHandler
func NewComponentHandler(service ares.ComponentService, log logger.Logger) *ComponentHandler {
	return &ComponentHandler{
		service: service,
		log:     log,
	}
}

// FIXME(go-swagger): Add the required fields for ComponentHandler
// ComponentHandler is an empty implementation of the api.ComponentAPI interface.
type ComponentHandler struct {
	service ares.ComponentService
	log     logger.Logger
}

// CreateAction
func (h *ComponentHandler) CreateAction(params component.CreateActionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.CreateAction()

	// ret, err := h.service.CreateAction(params.Body, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 409 - Conflict
	// return &component.CreateActionConflict {
	//    Payload: errors.Message(err, 1),
	//}
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.CreateActionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.CreateAction(params) to &component.CreateActionOK
	//return &component.CreateActionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation CreateAction has not yet been implemented")
}

// CreateActionVersion If the action that this version belongs to doesn't already exist, it will be created
func (h *ComponentHandler) CreateActionVersion(params component.CreateActionVersionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.CreateActionVersion()

	// ret, err := h.service.CreateActionVersion(params.ActionFile, params.Description, params.ExampleConfig, params.InputSchema, params.Name, params.OrgName, params.OutputSchema, params.Public, params.Readme, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.CreateActionVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.CreateActionVersion(params) to &component.CreateActionVersionOK
	//return &component.CreateActionVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation CreateActionVersion has not yet been implemented")
}

// CreateBase
func (h *ComponentHandler) CreateBase(params component.CreateBaseParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.CreateBase()

	// ret, err := h.service.CreateBase(params.Body, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.CreateBaseInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.CreateBase(params) to &component.CreateBaseOK
	//return &component.CreateBaseOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation CreateBase has not yet been implemented")
}

// CreateBaseVersion If the base that this version belongs to doesn't already exist, it will be created
func (h *ComponentHandler) CreateBaseVersion(params component.CreateBaseVersionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.CreateBaseVersion()

	// ret, err := h.service.CreateBaseVersion(params.Body, params.Name, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.CreateBaseVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.CreateBaseVersion(params) to &component.CreateBaseVersionOK
	//return &component.CreateBaseVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation CreateBaseVersion has not yet been implemented")
}

// CreateTrigger
func (h *ComponentHandler) CreateTrigger(params component.CreateTriggerParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.CreateTrigger()

	// ret, err := h.service.CreateTrigger(params.Body, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.CreateTriggerInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.CreateTrigger(params) to &component.CreateTriggerOK
	//return &component.CreateTriggerOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation CreateTrigger has not yet been implemented")
}

// CreateTriggerVersion If the trigger that this version belongs to doesn't already exist, it will be created
func (h *ComponentHandler) CreateTriggerVersion(params component.CreateTriggerVersionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.CreateTriggerVersion()

	// ret, err := h.service.CreateTriggerVersion(params.Description, params.ExampleConfig, params.InputSchema, params.Name, params.OrgName, params.OutputSchema, params.Public, params.Readme, params.TriggerFile, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.CreateTriggerVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.CreateTriggerVersion(params) to &component.CreateTriggerVersionOK
	//return &component.CreateTriggerVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation CreateTriggerVersion has not yet been implemented")
}

// GetAction Get a action component with all its versions
func (h *ComponentHandler) GetAction(params component.GetActionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAction()

	// ret, err := h.service.GetAction(params.Name, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetActionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAction(params) to &component.GetActionOK
	//return &component.GetActionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAction has not yet been implemented")
}

// GetActionVersion
func (h *ComponentHandler) GetActionVersion(params component.GetActionVersionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetActionVersion()

	// ret, err := h.service.GetActionVersion(params.Name, params.OrgName, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetActionVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetActionVersion(params) to &component.GetActionVersionOK
	//return &component.GetActionVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetActionVersion has not yet been implemented")
}

// GetAllActions
func (h *ComponentHandler) GetAllActions(params component.GetAllActionsParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAllActions()

	// ret, err := h.service.GetAllActions(params.Available, params.Available, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetAllActionsInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAllActions(params) to &component.GetAllActionsOK
	//return &component.GetAllActionsOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAllActions has not yet been implemented")
}

// GetAllBases
func (h *ComponentHandler) GetAllBases(params component.GetAllBasesParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAllBases()

	// ret, err := h.service.GetAllBases(params.Available, params.Available, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetAllBasesInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAllBases(params) to &component.GetAllBasesOK
	//return &component.GetAllBasesOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAllBases has not yet been implemented")
}

// GetAllPublicActions
func (h *ComponentHandler) GetAllPublicActions(params component.GetAllPublicActionsParams) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAllPublicActions()

	// ret, err := h.service.GetAllPublicActions()

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetAllPublicActionsInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAllPublicActions(params) to &component.GetAllPublicActionsOK
	//return &component.GetAllPublicActionsOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAllPublicActions has not yet been implemented")
}

// GetAllPublicTriggers
func (h *ComponentHandler) GetAllPublicTriggers(params component.GetAllPublicTriggersParams) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAllPublicTriggers()

	// ret, err := h.service.GetAllPublicTriggers()

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetAllPublicTriggersInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAllPublicTriggers(params) to &component.GetAllPublicTriggersOK
	//return &component.GetAllPublicTriggersOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAllPublicTriggers has not yet been implemented")
}

// GetAllTriggers
func (h *ComponentHandler) GetAllTriggers(params component.GetAllTriggersParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAllTriggers()

	// ret, err := h.service.GetAllTriggers(params.Available, params.Available, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetAllTriggersInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAllTriggers(params) to &component.GetAllTriggersOK
	//return &component.GetAllTriggersOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAllTriggers has not yet been implemented")
}

// GetBase Get a base component with all its versions
func (h *ComponentHandler) GetBase(params component.GetBaseParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetBase()

	// ret, err := h.service.GetBase(params.Name, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetBaseInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetBase(params) to &component.GetBaseOK
	//return &component.GetBaseOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetBase has not yet been implemented")
}

// GetBaseVersion
func (h *ComponentHandler) GetBaseVersion(params component.GetBaseVersionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetBaseVersion()

	// ret, err := h.service.GetBaseVersion(params.Name, params.OrgName, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetBaseVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetBaseVersion(params) to &component.GetBaseVersionOK
	//return &component.GetBaseVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetBaseVersion has not yet been implemented")
}

// GetPublicAction Get a public action component with all its versions
func (h *ComponentHandler) GetPublicAction(params component.GetPublicActionParams) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetPublicAction()

	// ret, err := h.service.GetPublicAction(params.Name)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetPublicActionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetPublicAction(params) to &component.GetPublicActionOK
	//return &component.GetPublicActionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetPublicAction has not yet been implemented")
}

// GetPublicActionVersion
func (h *ComponentHandler) GetPublicActionVersion(params component.GetPublicActionVersionParams) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetPublicActionVersion()

	// ret, err := h.service.GetPublicActionVersion(params.Name, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetPublicActionVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetPublicActionVersion(params) to &component.GetPublicActionVersionOK
	//return &component.GetPublicActionVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetPublicActionVersion has not yet been implemented")
}

// GetPublicTrigger Get a public trigger component with all its versions
func (h *ComponentHandler) GetPublicTrigger(params component.GetPublicTriggerParams) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetPublicTrigger()

	// ret, err := h.service.GetPublicTrigger(params.Name)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetPublicTriggerInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetPublicTrigger(params) to &component.GetPublicTriggerOK
	//return &component.GetPublicTriggerOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetPublicTrigger has not yet been implemented")
}

// GetPublicTriggerVersion
func (h *ComponentHandler) GetPublicTriggerVersion(params component.GetPublicTriggerVersionParams) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetPublicTriggerVersion()

	// ret, err := h.service.GetPublicTriggerVersion(params.Name, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetPublicTriggerVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetPublicTriggerVersion(params) to &component.GetPublicTriggerVersionOK
	//return &component.GetPublicTriggerVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetPublicTriggerVersion has not yet been implemented")
}

// GetTrigger Get a trigger component with all its versions
func (h *ComponentHandler) GetTrigger(params component.GetTriggerParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetTrigger()

	// ret, err := h.service.GetTrigger(params.Name, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetTriggerInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetTrigger(params) to &component.GetTriggerOK
	//return &component.GetTriggerOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetTrigger has not yet been implemented")
}

// GetTriggerVersion
func (h *ComponentHandler) GetTriggerVersion(params component.GetTriggerVersionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetTriggerVersion()

	// ret, err := h.service.GetTriggerVersion(params.Name, params.OrgName, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.GetTriggerVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetTriggerVersion(params) to &component.GetTriggerVersionOK
	//return &component.GetTriggerVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetTriggerVersion has not yet been implemented")
}

// UpdateAction Update a action component
func (h *ComponentHandler) UpdateAction(params component.UpdateActionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdateAction()

	// ret, err := h.service.UpdateAction(params.Body, params.Name, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.UpdateActionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdateAction(params) to &component.UpdateActionOK
	//return &component.UpdateActionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdateAction has not yet been implemented")
}

// UpdateActionVersion
func (h *ComponentHandler) UpdateActionVersion(params component.UpdateActionVersionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdateActionVersion()

	// ret, err := h.service.UpdateActionVersion(params.Body, params.Name, params.OrgName, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.UpdateActionVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdateActionVersion(params) to &component.UpdateActionVersionOK
	//return &component.UpdateActionVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdateActionVersion has not yet been implemented")
}

// UpdateBase Update a base component
func (h *ComponentHandler) UpdateBase(params component.UpdateBaseParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdateBase()

	// ret, err := h.service.UpdateBase(params.Body, params.Name, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.UpdateBaseInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdateBase(params) to &component.UpdateBaseOK
	//return &component.UpdateBaseOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdateBase has not yet been implemented")
}

// UpdateBaseVersion
func (h *ComponentHandler) UpdateBaseVersion(params component.UpdateBaseVersionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdateBaseVersion()

	// ret, err := h.service.UpdateBaseVersion(params.Body, params.Name, params.OrgName, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.UpdateBaseVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdateBaseVersion(params) to &component.UpdateBaseVersionOK
	//return &component.UpdateBaseVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdateBaseVersion has not yet been implemented")
}

// UpdateTrigger Update a trigger component
func (h *ComponentHandler) UpdateTrigger(params component.UpdateTriggerParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdateTrigger()

	// ret, err := h.service.UpdateTrigger(params.Body, params.Name, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 409 - Conflict
	// return &component.UpdateTriggerConflict {
	//    Payload: errors.Message(err, 1),
	//}
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.UpdateTriggerInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdateTrigger(params) to &component.UpdateTriggerOK
	//return &component.UpdateTriggerOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdateTrigger has not yet been implemented")
}

// UpdateTriggerVersion
func (h *ComponentHandler) UpdateTriggerVersion(params component.UpdateTriggerVersionParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdateTriggerVersion()

	// ret, err := h.service.UpdateTriggerVersion(params.Body, params.Name, params.OrgName, params.Version)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &component.UpdateTriggerVersionInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdateTriggerVersion(params) to &component.UpdateTriggerVersionOK
	//return &component.UpdateTriggerVersionOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdateTriggerVersion has not yet been implemented")
}
