// Code generated by go-swagger; DO NOT EDIT.

package handlers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/google/wire"
	"github.com/unchainio/interfaces/logger"

	"bitbucket.org/unchain/ares/gen/api/operations/pipeline"

	dto "bitbucket.org/unchain/ares/gen/dto"

	"bitbucket.org/unchain/ares/gen/api"
	"bitbucket.org/unchain/ares/pkg/ares"
	"github.com/go-openapi/runtime/middleware"
)

var _ api.PipelineAPI = &PipelineHandler{}

var PipelineSet = wire.NewSet(NewPipelineHandler, wire.Bind(new(api.PipelineAPI), new(PipelineHandler)))

// FIXME(go-swagger): Add the required parameters for NewPipeline
// NewPipelineHandler
func NewPipelineHandler(service ares.PipelineService, log logger.Logger) *PipelineHandler {
	return &PipelineHandler{
		service: service,
		log:     log,
	}
}

// FIXME(go-swagger): Add the required fields for PipelineHandler
// PipelineHandler is an empty implementation of the api.PipelineAPI interface.
type PipelineHandler struct {
	service ares.PipelineService
	log     logger.Logger
}

// CreateEnvironmentVariable
func (h *PipelineHandler) CreateEnvironmentVariable(params pipeline.CreateEnvironmentVariableParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.CreateEnvironmentVariable()

	// ret, err := h.service.CreateEnvironmentVariable(params.Body, params.EnvName, params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.CreateEnvironmentVariableInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.CreateEnvironmentVariable(params) to &pipeline.CreateEnvironmentVariableOK
	//return &pipeline.CreateEnvironmentVariableOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation CreateEnvironmentVariable has not yet been implemented")
}

// CreatePipeline
func (h *PipelineHandler) CreatePipeline(params pipeline.CreatePipelineParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.CreatePipeline()

	// ret, err := h.service.CreatePipeline(params.Body, params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 409 - Pipeline name already exists
	// return &pipeline.CreatePipelineConflict {
	//    Payload: errors.Message(err, 1),
	//}
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.CreatePipelineInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.CreatePipeline(params) to &pipeline.CreatePipelineOK
	//return &pipeline.CreatePipelineOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation CreatePipeline has not yet been implemented")
}

// DeleteEnvironmentVariable
func (h *PipelineHandler) DeleteEnvironmentVariable(params pipeline.DeleteEnvironmentVariableParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.DeleteEnvironmentVariable()

	// ret, err := h.service.DeleteEnvironmentVariable(params.EnvName, params.OrgName, params.PipelineName, params.VarID)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.DeleteEnvironmentVariableInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.DeleteEnvironmentVariable(params) to &pipeline.DeleteEnvironmentVariableNoContent
	//return &pipeline.DeleteEnvironmentVariableNoContent {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation DeleteEnvironmentVariable has not yet been implemented")
}

// DeletePipeline
func (h *PipelineHandler) DeletePipeline(params pipeline.DeletePipelineParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.DeletePipeline()

	// ret, err := h.service.DeletePipeline(params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.DeletePipelineInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.DeletePipeline(params) to &pipeline.DeletePipelineNoContent
	//return &pipeline.DeletePipelineNoContent {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation DeletePipeline has not yet been implemented")
}

// DeployConfiguration Deploy a pipeline configuration to a specific environment within the pipeline context
func (h *PipelineHandler) DeployConfiguration(params pipeline.DeployConfigurationParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.DeployConfiguration()

	// ret, err := h.service.DeployConfiguration(params.Body, params.EnvName, params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.DeployConfigurationInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.DeployConfiguration(params) to &pipeline.DeployConfigurationOK
	//return &pipeline.DeployConfigurationOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation DeployConfiguration has not yet been implemented")
}

// GetAllEnvironmentVariables
func (h *PipelineHandler) GetAllEnvironmentVariables(params pipeline.GetAllEnvironmentVariablesParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAllEnvironmentVariables()

	// ret, err := h.service.GetAllEnvironmentVariables(params.EnvName, params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.GetAllEnvironmentVariablesInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAllEnvironmentVariables(params) to &pipeline.GetAllEnvironmentVariablesOK
	//return &pipeline.GetAllEnvironmentVariablesOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAllEnvironmentVariables has not yet been implemented")
}

// GetAllPipelines Get all pipelines for the organization
func (h *PipelineHandler) GetAllPipelines(params pipeline.GetAllPipelinesParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetAllPipelines()

	// ret, err := h.service.GetAllPipelines(params.OrgName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.GetAllPipelinesInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetAllPipelines(params) to &pipeline.GetAllPipelinesOK
	//return &pipeline.GetAllPipelinesOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetAllPipelines has not yet been implemented")
}

// GetConfiguration
func (h *PipelineHandler) GetConfiguration(params pipeline.GetConfigurationParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetConfiguration()

	// ret, err := h.service.GetConfiguration(params.OrgName, params.PipelineName, params.Revision)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.GetConfigurationInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetConfiguration(params) to &pipeline.GetConfigurationOK
	//return &pipeline.GetConfigurationOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetConfiguration has not yet been implemented")
}

// GetDeployment
func (h *PipelineHandler) GetDeployment(params pipeline.GetDeploymentParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetDeployment()

	// ret, err := h.service.GetDeployment(params.EnvName, params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.GetDeploymentInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetDeployment(params) to &pipeline.GetDeploymentOK
	//return &pipeline.GetDeploymentOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetDeployment has not yet been implemented")
}

// GetDeploymentLogs
func (h *PipelineHandler) GetDeploymentLogs(params pipeline.GetDeploymentLogsParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetDeploymentLogs()

	// ret, err := h.service.GetDeploymentLogs(params.From, params.Limit, params.To, params.EnvName, params.From, params.Limit, params.OrgName, params.PipelineName, params.To)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.GetDeploymentLogsInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetDeploymentLogs(params) to &pipeline.GetDeploymentLogsOK
	//return &pipeline.GetDeploymentLogsOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetDeploymentLogs has not yet been implemented")
}

// GetDraftConfiguration
func (h *PipelineHandler) GetDraftConfiguration(params pipeline.GetDraftConfigurationParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetDraftConfiguration()

	// ret, err := h.service.GetDraftConfiguration(params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.GetDraftConfigurationInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetDraftConfiguration(params) to &pipeline.GetDraftConfigurationOK
	//return &pipeline.GetDraftConfigurationOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetDraftConfiguration has not yet been implemented")
}

// GetPipeline Get the pipeline with all its different configurations and deployments.
func (h *PipelineHandler) GetPipeline(params pipeline.GetPipelineParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.GetPipeline()

	// ret, err := h.service.GetPipeline(params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.GetPipelineInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.GetPipeline(params) to &pipeline.GetPipelineOK
	//return &pipeline.GetPipelineOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation GetPipeline has not yet been implemented")
}

// RemoveDeployment
func (h *PipelineHandler) RemoveDeployment(params pipeline.RemoveDeploymentParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.RemoveDeployment()

	// ret, err := h.service.RemoveDeployment(params.EnvName, params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.RemoveDeploymentInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.RemoveDeployment(params) to &pipeline.RemoveDeploymentNoContent
	//return &pipeline.RemoveDeploymentNoContent {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation RemoveDeployment has not yet been implemented")
}

// SaveDraftConfigurationAsNew A new configuration is created by auto-incrementing the latest version by 1.
func (h *PipelineHandler) SaveDraftConfigurationAsNew(params pipeline.SaveDraftConfigurationAsNewParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.SaveDraftConfigurationAsNew()

	// ret, err := h.service.SaveDraftConfigurationAsNew(params.Body, params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.SaveDraftConfigurationAsNewInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.SaveDraftConfigurationAsNew(params) to &pipeline.SaveDraftConfigurationAsNewOK
	//return &pipeline.SaveDraftConfigurationAsNewOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation SaveDraftConfigurationAsNew has not yet been implemented")
}

// UpdateDraftConfiguration The latest configuration version is not stored as a numbered version yet and is the only configuration that can be updated.
func (h *PipelineHandler) UpdateDraftConfiguration(params pipeline.UpdateDraftConfigurationParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdateDraftConfiguration()

	// ret, err := h.service.UpdateDraftConfiguration(params.Body, params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.UpdateDraftConfigurationInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdateDraftConfiguration(params) to &pipeline.UpdateDraftConfigurationOK
	//return &pipeline.UpdateDraftConfigurationOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdateDraftConfiguration has not yet been implemented")
}

// UpdateEnvironmentVariable
func (h *PipelineHandler) UpdateEnvironmentVariable(params pipeline.UpdateEnvironmentVariableParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdateEnvironmentVariable()

	// ret, err := h.service.UpdateEnvironmentVariable(params.Body, params.EnvName, params.OrgName, params.PipelineName, params.VarID)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.UpdateEnvironmentVariableInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdateEnvironmentVariable(params) to &pipeline.UpdateEnvironmentVariableOK
	//return &pipeline.UpdateEnvironmentVariableOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdateEnvironmentVariable has not yet been implemented")
}

// UpdatePipeline
func (h *PipelineHandler) UpdatePipeline(params pipeline.UpdatePipelineParams, principal *dto.User) middleware.Responder {
	// // FIXME(go-swagger): transform handler parameters into the parameters of h.Service.UpdatePipeline()

	// ret, err := h.service.UpdatePipeline(params.Body, params.OrgName, params.PipelineName)

	//if err != nil {
	// h.log.Errorf("%+v", err)
	// // FIXME(go-swagger): Handle errors
	// // FIXME(go-swagger): return error with code 500 - Internal server error
	// return &pipeline.UpdatePipelineInternalServerError {
	//    Payload: errors.Message(err, 1),
	//}
	//
	//}

	// // FIXME(go-swagger): transform the values returned by h.Service.UpdatePipeline(params) to &pipeline.UpdatePipelineOK
	//return &pipeline.UpdatePipelineOK {
	// Payload: ret,
	//}

	return middleware.NotImplemented("operation UpdatePipeline has not yet been implemented")
}
