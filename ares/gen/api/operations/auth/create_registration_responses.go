// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// CreateRegistrationOKCode is the HTTP code returned for type CreateRegistrationOK
const CreateRegistrationOKCode int = 200

/*CreateRegistrationOK Status 200

swagger:response createRegistrationOK
*/
type CreateRegistrationOK struct {
}

// NewCreateRegistrationOK creates CreateRegistrationOK with default headers values
func NewCreateRegistrationOK() *CreateRegistrationOK {

	return &CreateRegistrationOK{}
}

// WriteResponse to the client
func (o *CreateRegistrationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// CreateRegistrationInternalServerErrorCode is the HTTP code returned for type CreateRegistrationInternalServerError
const CreateRegistrationInternalServerErrorCode int = 500

/*CreateRegistrationInternalServerError Internal server error

swagger:response createRegistrationInternalServerError
*/
type CreateRegistrationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateRegistrationInternalServerError creates CreateRegistrationInternalServerError with default headers values
func NewCreateRegistrationInternalServerError() *CreateRegistrationInternalServerError {

	return &CreateRegistrationInternalServerError{}
}

// WithPayload adds the payload to the create registration internal server error response
func (o *CreateRegistrationInternalServerError) WithPayload(payload interface{}) *CreateRegistrationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create registration internal server error response
func (o *CreateRegistrationInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRegistrationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
