// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteCurrentUserNoContentCode is the HTTP code returned for type DeleteCurrentUserNoContent
const DeleteCurrentUserNoContentCode int = 204

/*DeleteCurrentUserNoContent Deleted

swagger:response deleteCurrentUserNoContent
*/
type DeleteCurrentUserNoContent struct {
}

// NewDeleteCurrentUserNoContent creates DeleteCurrentUserNoContent with default headers values
func NewDeleteCurrentUserNoContent() *DeleteCurrentUserNoContent {

	return &DeleteCurrentUserNoContent{}
}

// WriteResponse to the client
func (o *DeleteCurrentUserNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteCurrentUserInternalServerErrorCode is the HTTP code returned for type DeleteCurrentUserInternalServerError
const DeleteCurrentUserInternalServerErrorCode int = 500

/*DeleteCurrentUserInternalServerError Internal server error

swagger:response deleteCurrentUserInternalServerError
*/
type DeleteCurrentUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDeleteCurrentUserInternalServerError creates DeleteCurrentUserInternalServerError with default headers values
func NewDeleteCurrentUserInternalServerError() *DeleteCurrentUserInternalServerError {

	return &DeleteCurrentUserInternalServerError{}
}

// WithPayload adds the payload to the delete current user internal server error response
func (o *DeleteCurrentUserInternalServerError) WithPayload(payload interface{}) *DeleteCurrentUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete current user internal server error response
func (o *DeleteCurrentUserInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCurrentUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
