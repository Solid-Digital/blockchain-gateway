// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetCurrentUserOKCode is the HTTP code returned for type GetCurrentUserOK
const GetCurrentUserOKCode int = 200

/*GetCurrentUserOK Status 200

swagger:response getCurrentUserOK
*/
type GetCurrentUserOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetCurrentUserResponse `json:"body,omitempty"`
}

// NewGetCurrentUserOK creates GetCurrentUserOK with default headers values
func NewGetCurrentUserOK() *GetCurrentUserOK {

	return &GetCurrentUserOK{}
}

// WithPayload adds the payload to the get current user o k response
func (o *GetCurrentUserOK) WithPayload(payload *dto.GetCurrentUserResponse) *GetCurrentUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get current user o k response
func (o *GetCurrentUserOK) SetPayload(payload *dto.GetCurrentUserResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrentUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCurrentUserInternalServerErrorCode is the HTTP code returned for type GetCurrentUserInternalServerError
const GetCurrentUserInternalServerErrorCode int = 500

/*GetCurrentUserInternalServerError Internal server error

swagger:response getCurrentUserInternalServerError
*/
type GetCurrentUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetCurrentUserInternalServerError creates GetCurrentUserInternalServerError with default headers values
func NewGetCurrentUserInternalServerError() *GetCurrentUserInternalServerError {

	return &GetCurrentUserInternalServerError{}
}

// WithPayload adds the payload to the get current user internal server error response
func (o *GetCurrentUserInternalServerError) WithPayload(payload interface{}) *GetCurrentUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get current user internal server error response
func (o *GetCurrentUserInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrentUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
