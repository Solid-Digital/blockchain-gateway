// Code generated by go-swagger; DO NOT EDIT.

package pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetDeploymentLogsOKCode is the HTTP code returned for type GetDeploymentLogsOK
const GetDeploymentLogsOKCode int = 200

/*GetDeploymentLogsOK Status 200

swagger:response getDeploymentLogsOK
*/
type GetDeploymentLogsOK struct {

	/*
	  In: Body
	*/
	Payload []*dto.LogLine `json:"body,omitempty"`
}

// NewGetDeploymentLogsOK creates GetDeploymentLogsOK with default headers values
func NewGetDeploymentLogsOK() *GetDeploymentLogsOK {

	return &GetDeploymentLogsOK{}
}

// WithPayload adds the payload to the get deployment logs o k response
func (o *GetDeploymentLogsOK) WithPayload(payload []*dto.LogLine) *GetDeploymentLogsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get deployment logs o k response
func (o *GetDeploymentLogsOK) SetPayload(payload []*dto.LogLine) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeploymentLogsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*dto.LogLine, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetDeploymentLogsInternalServerErrorCode is the HTTP code returned for type GetDeploymentLogsInternalServerError
const GetDeploymentLogsInternalServerErrorCode int = 500

/*GetDeploymentLogsInternalServerError Internal server error

swagger:response getDeploymentLogsInternalServerError
*/
type GetDeploymentLogsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetDeploymentLogsInternalServerError creates GetDeploymentLogsInternalServerError with default headers values
func NewGetDeploymentLogsInternalServerError() *GetDeploymentLogsInternalServerError {

	return &GetDeploymentLogsInternalServerError{}
}

// WithPayload adds the payload to the get deployment logs internal server error response
func (o *GetDeploymentLogsInternalServerError) WithPayload(payload interface{}) *GetDeploymentLogsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get deployment logs internal server error response
func (o *GetDeploymentLogsInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeploymentLogsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
