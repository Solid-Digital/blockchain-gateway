// Code generated by go-swagger; DO NOT EDIT.

package pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// CreatePipelineOKCode is the HTTP code returned for type CreatePipelineOK
const CreatePipelineOKCode int = 200

/*CreatePipelineOK Status 200

swagger:response createPipelineOK
*/
type CreatePipelineOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetPipelineResponse `json:"body,omitempty"`
}

// NewCreatePipelineOK creates CreatePipelineOK with default headers values
func NewCreatePipelineOK() *CreatePipelineOK {

	return &CreatePipelineOK{}
}

// WithPayload adds the payload to the create pipeline o k response
func (o *CreatePipelineOK) WithPayload(payload *dto.GetPipelineResponse) *CreatePipelineOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create pipeline o k response
func (o *CreatePipelineOK) SetPayload(payload *dto.GetPipelineResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreatePipelineOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreatePipelineConflictCode is the HTTP code returned for type CreatePipelineConflict
const CreatePipelineConflictCode int = 409

/*CreatePipelineConflict Pipeline name already exists

swagger:response createPipelineConflict
*/
type CreatePipelineConflict struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreatePipelineConflict creates CreatePipelineConflict with default headers values
func NewCreatePipelineConflict() *CreatePipelineConflict {

	return &CreatePipelineConflict{}
}

// WithPayload adds the payload to the create pipeline conflict response
func (o *CreatePipelineConflict) WithPayload(payload interface{}) *CreatePipelineConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create pipeline conflict response
func (o *CreatePipelineConflict) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreatePipelineConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CreatePipelineInternalServerErrorCode is the HTTP code returned for type CreatePipelineInternalServerError
const CreatePipelineInternalServerErrorCode int = 500

/*CreatePipelineInternalServerError Internal server error

swagger:response createPipelineInternalServerError
*/
type CreatePipelineInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreatePipelineInternalServerError creates CreatePipelineInternalServerError with default headers values
func NewCreatePipelineInternalServerError() *CreatePipelineInternalServerError {

	return &CreatePipelineInternalServerError{}
}

// WithPayload adds the payload to the create pipeline internal server error response
func (o *CreatePipelineInternalServerError) WithPayload(payload interface{}) *CreatePipelineInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create pipeline internal server error response
func (o *CreatePipelineInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreatePipelineInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
