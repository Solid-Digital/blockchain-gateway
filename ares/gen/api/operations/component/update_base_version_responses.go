// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// UpdateBaseVersionOKCode is the HTTP code returned for type UpdateBaseVersionOK
const UpdateBaseVersionOKCode int = 200

/*UpdateBaseVersionOK Status 200

swagger:response updateBaseVersionOK
*/
type UpdateBaseVersionOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetBaseVersionResponse `json:"body,omitempty"`
}

// NewUpdateBaseVersionOK creates UpdateBaseVersionOK with default headers values
func NewUpdateBaseVersionOK() *UpdateBaseVersionOK {

	return &UpdateBaseVersionOK{}
}

// WithPayload adds the payload to the update base version o k response
func (o *UpdateBaseVersionOK) WithPayload(payload *dto.GetBaseVersionResponse) *UpdateBaseVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update base version o k response
func (o *UpdateBaseVersionOK) SetPayload(payload *dto.GetBaseVersionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBaseVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateBaseVersionInternalServerErrorCode is the HTTP code returned for type UpdateBaseVersionInternalServerError
const UpdateBaseVersionInternalServerErrorCode int = 500

/*UpdateBaseVersionInternalServerError Internal server error

swagger:response updateBaseVersionInternalServerError
*/
type UpdateBaseVersionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateBaseVersionInternalServerError creates UpdateBaseVersionInternalServerError with default headers values
func NewUpdateBaseVersionInternalServerError() *UpdateBaseVersionInternalServerError {

	return &UpdateBaseVersionInternalServerError{}
}

// WithPayload adds the payload to the update base version internal server error response
func (o *UpdateBaseVersionInternalServerError) WithPayload(payload interface{}) *UpdateBaseVersionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update base version internal server error response
func (o *UpdateBaseVersionInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBaseVersionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
