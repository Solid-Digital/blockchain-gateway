// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// CreateBaseVersionOKCode is the HTTP code returned for type CreateBaseVersionOK
const CreateBaseVersionOKCode int = 200

/*CreateBaseVersionOK Status 200

swagger:response createBaseVersionOK
*/
type CreateBaseVersionOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetBaseVersionResponse `json:"body,omitempty"`
}

// NewCreateBaseVersionOK creates CreateBaseVersionOK with default headers values
func NewCreateBaseVersionOK() *CreateBaseVersionOK {

	return &CreateBaseVersionOK{}
}

// WithPayload adds the payload to the create base version o k response
func (o *CreateBaseVersionOK) WithPayload(payload *dto.GetBaseVersionResponse) *CreateBaseVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create base version o k response
func (o *CreateBaseVersionOK) SetPayload(payload *dto.GetBaseVersionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateBaseVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateBaseVersionInternalServerErrorCode is the HTTP code returned for type CreateBaseVersionInternalServerError
const CreateBaseVersionInternalServerErrorCode int = 500

/*CreateBaseVersionInternalServerError Internal server error

swagger:response createBaseVersionInternalServerError
*/
type CreateBaseVersionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateBaseVersionInternalServerError creates CreateBaseVersionInternalServerError with default headers values
func NewCreateBaseVersionInternalServerError() *CreateBaseVersionInternalServerError {

	return &CreateBaseVersionInternalServerError{}
}

// WithPayload adds the payload to the create base version internal server error response
func (o *CreateBaseVersionInternalServerError) WithPayload(payload interface{}) *CreateBaseVersionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create base version internal server error response
func (o *CreateBaseVersionInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateBaseVersionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
