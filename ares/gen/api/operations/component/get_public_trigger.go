// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetPublicTriggerHandlerFunc turns a function with the right signature into a get public trigger handler
type GetPublicTriggerHandlerFunc func(GetPublicTriggerParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPublicTriggerHandlerFunc) Handle(params GetPublicTriggerParams) middleware.Responder {
	return fn(params)
}

// GetPublicTriggerHandler interface for that can handle valid get public trigger params
type GetPublicTriggerHandler interface {
	Handle(GetPublicTriggerParams) middleware.Responder
}

// NewGetPublicTrigger creates a new http.Handler for the get public trigger operation
func NewGetPublicTrigger(ctx *middleware.Context, handler GetPublicTriggerHandler) *GetPublicTrigger {
	return &GetPublicTrigger{Context: ctx, Handler: handler}
}

/*GetPublicTrigger swagger:route GET /triggers/{name} component getPublicTrigger

Get Public Trigger Detail

Get a public trigger component with all its versions

*/
type GetPublicTrigger struct {
	Context *middleware.Context
	Handler GetPublicTriggerHandler
}

func (o *GetPublicTrigger) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPublicTriggerParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
