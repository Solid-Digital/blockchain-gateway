// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// CreateTriggerOKCode is the HTTP code returned for type CreateTriggerOK
const CreateTriggerOKCode int = 200

/*CreateTriggerOK Status 200

swagger:response createTriggerOK
*/
type CreateTriggerOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetComponentResponse `json:"body,omitempty"`
}

// NewCreateTriggerOK creates CreateTriggerOK with default headers values
func NewCreateTriggerOK() *CreateTriggerOK {

	return &CreateTriggerOK{}
}

// WithPayload adds the payload to the create trigger o k response
func (o *CreateTriggerOK) WithPayload(payload *dto.GetComponentResponse) *CreateTriggerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create trigger o k response
func (o *CreateTriggerOK) SetPayload(payload *dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTriggerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTriggerInternalServerErrorCode is the HTTP code returned for type CreateTriggerInternalServerError
const CreateTriggerInternalServerErrorCode int = 500

/*CreateTriggerInternalServerError Internal server error

swagger:response createTriggerInternalServerError
*/
type CreateTriggerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateTriggerInternalServerError creates CreateTriggerInternalServerError with default headers values
func NewCreateTriggerInternalServerError() *CreateTriggerInternalServerError {

	return &CreateTriggerInternalServerError{}
}

// WithPayload adds the payload to the create trigger internal server error response
func (o *CreateTriggerInternalServerError) WithPayload(payload interface{}) *CreateTriggerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create trigger internal server error response
func (o *CreateTriggerInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTriggerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
