// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetBaseOKCode is the HTTP code returned for type GetBaseOK
const GetBaseOKCode int = 200

/*GetBaseOK Status 200

swagger:response getBaseOK
*/
type GetBaseOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetComponentResponse `json:"body,omitempty"`
}

// NewGetBaseOK creates GetBaseOK with default headers values
func NewGetBaseOK() *GetBaseOK {

	return &GetBaseOK{}
}

// WithPayload adds the payload to the get base o k response
func (o *GetBaseOK) WithPayload(payload *dto.GetComponentResponse) *GetBaseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get base o k response
func (o *GetBaseOK) SetPayload(payload *dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBaseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBaseInternalServerErrorCode is the HTTP code returned for type GetBaseInternalServerError
const GetBaseInternalServerErrorCode int = 500

/*GetBaseInternalServerError Internal server error

swagger:response getBaseInternalServerError
*/
type GetBaseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetBaseInternalServerError creates GetBaseInternalServerError with default headers values
func NewGetBaseInternalServerError() *GetBaseInternalServerError {

	return &GetBaseInternalServerError{}
}

// WithPayload adds the payload to the get base internal server error response
func (o *GetBaseInternalServerError) WithPayload(payload interface{}) *GetBaseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get base internal server error response
func (o *GetBaseInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBaseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
