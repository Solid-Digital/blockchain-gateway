// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// UpdateActionOKCode is the HTTP code returned for type UpdateActionOK
const UpdateActionOKCode int = 200

/*UpdateActionOK Status 200

swagger:response updateActionOK
*/
type UpdateActionOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetComponentResponse `json:"body,omitempty"`
}

// NewUpdateActionOK creates UpdateActionOK with default headers values
func NewUpdateActionOK() *UpdateActionOK {

	return &UpdateActionOK{}
}

// WithPayload adds the payload to the update action o k response
func (o *UpdateActionOK) WithPayload(payload *dto.GetComponentResponse) *UpdateActionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update action o k response
func (o *UpdateActionOK) SetPayload(payload *dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateActionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateActionInternalServerErrorCode is the HTTP code returned for type UpdateActionInternalServerError
const UpdateActionInternalServerErrorCode int = 500

/*UpdateActionInternalServerError Internal server error

swagger:response updateActionInternalServerError
*/
type UpdateActionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateActionInternalServerError creates UpdateActionInternalServerError with default headers values
func NewUpdateActionInternalServerError() *UpdateActionInternalServerError {

	return &UpdateActionInternalServerError{}
}

// WithPayload adds the payload to the update action internal server error response
func (o *UpdateActionInternalServerError) WithPayload(payload interface{}) *UpdateActionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update action internal server error response
func (o *UpdateActionInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateActionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
