// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetAllActionsOKCode is the HTTP code returned for type GetAllActionsOK
const GetAllActionsOKCode int = 200

/*GetAllActionsOK Status 200

swagger:response getAllActionsOK
*/
type GetAllActionsOK struct {

	/*
	  In: Body
	*/
	Payload []*dto.GetComponentResponse `json:"body,omitempty"`
}

// NewGetAllActionsOK creates GetAllActionsOK with default headers values
func NewGetAllActionsOK() *GetAllActionsOK {

	return &GetAllActionsOK{}
}

// WithPayload adds the payload to the get all actions o k response
func (o *GetAllActionsOK) WithPayload(payload []*dto.GetComponentResponse) *GetAllActionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all actions o k response
func (o *GetAllActionsOK) SetPayload(payload []*dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllActionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*dto.GetComponentResponse, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllActionsInternalServerErrorCode is the HTTP code returned for type GetAllActionsInternalServerError
const GetAllActionsInternalServerErrorCode int = 500

/*GetAllActionsInternalServerError Internal server error

swagger:response getAllActionsInternalServerError
*/
type GetAllActionsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetAllActionsInternalServerError creates GetAllActionsInternalServerError with default headers values
func NewGetAllActionsInternalServerError() *GetAllActionsInternalServerError {

	return &GetAllActionsInternalServerError{}
}

// WithPayload adds the payload to the get all actions internal server error response
func (o *GetAllActionsInternalServerError) WithPayload(payload interface{}) *GetAllActionsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all actions internal server error response
func (o *GetAllActionsInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllActionsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
