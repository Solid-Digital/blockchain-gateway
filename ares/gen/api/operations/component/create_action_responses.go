// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// CreateActionOKCode is the HTTP code returned for type CreateActionOK
const CreateActionOKCode int = 200

/*CreateActionOK Status 200

swagger:response createActionOK
*/
type CreateActionOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetComponentResponse `json:"body,omitempty"`
}

// NewCreateActionOK creates CreateActionOK with default headers values
func NewCreateActionOK() *CreateActionOK {

	return &CreateActionOK{}
}

// WithPayload adds the payload to the create action o k response
func (o *CreateActionOK) WithPayload(payload *dto.GetComponentResponse) *CreateActionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create action o k response
func (o *CreateActionOK) SetPayload(payload *dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateActionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateActionConflictCode is the HTTP code returned for type CreateActionConflict
const CreateActionConflictCode int = 409

/*CreateActionConflict Conflict

swagger:response createActionConflict
*/
type CreateActionConflict struct {

	/*
	  In: Body
	*/
	Payload *dto.ErrorResponse `json:"body,omitempty"`
}

// NewCreateActionConflict creates CreateActionConflict with default headers values
func NewCreateActionConflict() *CreateActionConflict {

	return &CreateActionConflict{}
}

// WithPayload adds the payload to the create action conflict response
func (o *CreateActionConflict) WithPayload(payload *dto.ErrorResponse) *CreateActionConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create action conflict response
func (o *CreateActionConflict) SetPayload(payload *dto.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateActionConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateActionInternalServerErrorCode is the HTTP code returned for type CreateActionInternalServerError
const CreateActionInternalServerErrorCode int = 500

/*CreateActionInternalServerError Internal server error

swagger:response createActionInternalServerError
*/
type CreateActionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *dto.ErrorResponse `json:"body,omitempty"`
}

// NewCreateActionInternalServerError creates CreateActionInternalServerError with default headers values
func NewCreateActionInternalServerError() *CreateActionInternalServerError {

	return &CreateActionInternalServerError{}
}

// WithPayload adds the payload to the create action internal server error response
func (o *CreateActionInternalServerError) WithPayload(payload *dto.ErrorResponse) *CreateActionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create action internal server error response
func (o *CreateActionInternalServerError) SetPayload(payload *dto.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateActionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
