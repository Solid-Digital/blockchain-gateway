// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// CreateBaseOKCode is the HTTP code returned for type CreateBaseOK
const CreateBaseOKCode int = 200

/*CreateBaseOK Status 200

swagger:response createBaseOK
*/
type CreateBaseOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetComponentResponse `json:"body,omitempty"`
}

// NewCreateBaseOK creates CreateBaseOK with default headers values
func NewCreateBaseOK() *CreateBaseOK {

	return &CreateBaseOK{}
}

// WithPayload adds the payload to the create base o k response
func (o *CreateBaseOK) WithPayload(payload *dto.GetComponentResponse) *CreateBaseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create base o k response
func (o *CreateBaseOK) SetPayload(payload *dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateBaseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateBaseInternalServerErrorCode is the HTTP code returned for type CreateBaseInternalServerError
const CreateBaseInternalServerErrorCode int = 500

/*CreateBaseInternalServerError Internal server error

swagger:response createBaseInternalServerError
*/
type CreateBaseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateBaseInternalServerError creates CreateBaseInternalServerError with default headers values
func NewCreateBaseInternalServerError() *CreateBaseInternalServerError {

	return &CreateBaseInternalServerError{}
}

// WithPayload adds the payload to the create base internal server error response
func (o *CreateBaseInternalServerError) WithPayload(payload interface{}) *CreateBaseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create base internal server error response
func (o *CreateBaseInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateBaseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
