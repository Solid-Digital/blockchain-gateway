// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetPublicActionVersionHandlerFunc turns a function with the right signature into a get public action version handler
type GetPublicActionVersionHandlerFunc func(GetPublicActionVersionParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPublicActionVersionHandlerFunc) Handle(params GetPublicActionVersionParams) middleware.Responder {
	return fn(params)
}

// GetPublicActionVersionHandler interface for that can handle valid get public action version params
type GetPublicActionVersionHandler interface {
	Handle(GetPublicActionVersionParams) middleware.Responder
}

// NewGetPublicActionVersion creates a new http.Handler for the get public action version operation
func NewGetPublicActionVersion(ctx *middleware.Context, handler GetPublicActionVersionHandler) *GetPublicActionVersion {
	return &GetPublicActionVersion{Context: ctx, Handler: handler}
}

/*GetPublicActionVersion swagger:route GET /actions/{name}/versions/{version} component getPublicActionVersion

Get Public Action version

*/
type GetPublicActionVersion struct {
	Context *middleware.Context
	Handler GetPublicActionVersionHandler
}

func (o *GetPublicActionVersion) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPublicActionVersionParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
