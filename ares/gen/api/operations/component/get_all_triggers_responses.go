// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetAllTriggersOKCode is the HTTP code returned for type GetAllTriggersOK
const GetAllTriggersOKCode int = 200

/*GetAllTriggersOK Status 200

swagger:response getAllTriggersOK
*/
type GetAllTriggersOK struct {

	/*
	  In: Body
	*/
	Payload []*dto.GetComponentResponse `json:"body,omitempty"`
}

// NewGetAllTriggersOK creates GetAllTriggersOK with default headers values
func NewGetAllTriggersOK() *GetAllTriggersOK {

	return &GetAllTriggersOK{}
}

// WithPayload adds the payload to the get all triggers o k response
func (o *GetAllTriggersOK) WithPayload(payload []*dto.GetComponentResponse) *GetAllTriggersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all triggers o k response
func (o *GetAllTriggersOK) SetPayload(payload []*dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTriggersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*dto.GetComponentResponse, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllTriggersInternalServerErrorCode is the HTTP code returned for type GetAllTriggersInternalServerError
const GetAllTriggersInternalServerErrorCode int = 500

/*GetAllTriggersInternalServerError Internal server error

swagger:response getAllTriggersInternalServerError
*/
type GetAllTriggersInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetAllTriggersInternalServerError creates GetAllTriggersInternalServerError with default headers values
func NewGetAllTriggersInternalServerError() *GetAllTriggersInternalServerError {

	return &GetAllTriggersInternalServerError{}
}

// WithPayload adds the payload to the get all triggers internal server error response
func (o *GetAllTriggersInternalServerError) WithPayload(payload interface{}) *GetAllTriggersInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all triggers internal server error response
func (o *GetAllTriggersInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTriggersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
