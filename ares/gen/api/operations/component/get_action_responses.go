// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetActionOKCode is the HTTP code returned for type GetActionOK
const GetActionOKCode int = 200

/*GetActionOK Status 200

swagger:response getActionOK
*/
type GetActionOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetComponentResponse `json:"body,omitempty"`
}

// NewGetActionOK creates GetActionOK with default headers values
func NewGetActionOK() *GetActionOK {

	return &GetActionOK{}
}

// WithPayload adds the payload to the get action o k response
func (o *GetActionOK) WithPayload(payload *dto.GetComponentResponse) *GetActionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get action o k response
func (o *GetActionOK) SetPayload(payload *dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetActionInternalServerErrorCode is the HTTP code returned for type GetActionInternalServerError
const GetActionInternalServerErrorCode int = 500

/*GetActionInternalServerError Internal server error

swagger:response getActionInternalServerError
*/
type GetActionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetActionInternalServerError creates GetActionInternalServerError with default headers values
func NewGetActionInternalServerError() *GetActionInternalServerError {

	return &GetActionInternalServerError{}
}

// WithPayload adds the payload to the get action internal server error response
func (o *GetActionInternalServerError) WithPayload(payload interface{}) *GetActionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get action internal server error response
func (o *GetActionInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
