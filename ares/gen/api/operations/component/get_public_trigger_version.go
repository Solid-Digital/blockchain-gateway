// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetPublicTriggerVersionHandlerFunc turns a function with the right signature into a get public trigger version handler
type GetPublicTriggerVersionHandlerFunc func(GetPublicTriggerVersionParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPublicTriggerVersionHandlerFunc) Handle(params GetPublicTriggerVersionParams) middleware.Responder {
	return fn(params)
}

// GetPublicTriggerVersionHandler interface for that can handle valid get public trigger version params
type GetPublicTriggerVersionHandler interface {
	Handle(GetPublicTriggerVersionParams) middleware.Responder
}

// NewGetPublicTriggerVersion creates a new http.Handler for the get public trigger version operation
func NewGetPublicTriggerVersion(ctx *middleware.Context, handler GetPublicTriggerVersionHandler) *GetPublicTriggerVersion {
	return &GetPublicTriggerVersion{Context: ctx, Handler: handler}
}

/*GetPublicTriggerVersion swagger:route GET /triggers/{name}/versions/{version} component getPublicTriggerVersion

Get Public Trigger version

*/
type GetPublicTriggerVersion struct {
	Context *middleware.Context
	Handler GetPublicTriggerVersionHandler
}

func (o *GetPublicTriggerVersion) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPublicTriggerVersionParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
