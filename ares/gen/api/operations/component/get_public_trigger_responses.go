// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetPublicTriggerOKCode is the HTTP code returned for type GetPublicTriggerOK
const GetPublicTriggerOKCode int = 200

/*GetPublicTriggerOK Status 200

swagger:response getPublicTriggerOK
*/
type GetPublicTriggerOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetComponentResponse `json:"body,omitempty"`
}

// NewGetPublicTriggerOK creates GetPublicTriggerOK with default headers values
func NewGetPublicTriggerOK() *GetPublicTriggerOK {

	return &GetPublicTriggerOK{}
}

// WithPayload adds the payload to the get public trigger o k response
func (o *GetPublicTriggerOK) WithPayload(payload *dto.GetComponentResponse) *GetPublicTriggerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public trigger o k response
func (o *GetPublicTriggerOK) SetPayload(payload *dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicTriggerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublicTriggerInternalServerErrorCode is the HTTP code returned for type GetPublicTriggerInternalServerError
const GetPublicTriggerInternalServerErrorCode int = 500

/*GetPublicTriggerInternalServerError Internal server error

swagger:response getPublicTriggerInternalServerError
*/
type GetPublicTriggerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetPublicTriggerInternalServerError creates GetPublicTriggerInternalServerError with default headers values
func NewGetPublicTriggerInternalServerError() *GetPublicTriggerInternalServerError {

	return &GetPublicTriggerInternalServerError{}
}

// WithPayload adds the payload to the get public trigger internal server error response
func (o *GetPublicTriggerInternalServerError) WithPayload(payload interface{}) *GetPublicTriggerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public trigger internal server error response
func (o *GetPublicTriggerInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicTriggerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
