// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetAllBasesHandlerFunc turns a function with the right signature into a get all bases handler
type GetAllBasesHandlerFunc func(GetAllBasesParams, *dto.User) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAllBasesHandlerFunc) Handle(params GetAllBasesParams, principal *dto.User) middleware.Responder {
	return fn(params, principal)
}

// GetAllBasesHandler interface for that can handle valid get all bases params
type GetAllBasesHandler interface {
	Handle(GetAllBasesParams, *dto.User) middleware.Responder
}

// NewGetAllBases creates a new http.Handler for the get all bases operation
func NewGetAllBases(ctx *middleware.Context, handler GetAllBasesHandler) *GetAllBases {
	return &GetAllBases{Context: ctx, Handler: handler}
}

/*GetAllBases swagger:route GET /orgs/{orgName}/bases component getAllBases

Get all bases in this organization

*/
type GetAllBases struct {
	Context *middleware.Context
	Handler GetAllBasesHandler
}

func (o *GetAllBases) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAllBasesParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal *dto.User
	if uprinc != nil {
		principal = uprinc.(*dto.User) // this is really a dto.User, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
