// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetAllBasesOKCode is the HTTP code returned for type GetAllBasesOK
const GetAllBasesOKCode int = 200

/*GetAllBasesOK Status 200

swagger:response getAllBasesOK
*/
type GetAllBasesOK struct {

	/*
	  In: Body
	*/
	Payload []*dto.GetComponentResponse `json:"body,omitempty"`
}

// NewGetAllBasesOK creates GetAllBasesOK with default headers values
func NewGetAllBasesOK() *GetAllBasesOK {

	return &GetAllBasesOK{}
}

// WithPayload adds the payload to the get all bases o k response
func (o *GetAllBasesOK) WithPayload(payload []*dto.GetComponentResponse) *GetAllBasesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all bases o k response
func (o *GetAllBasesOK) SetPayload(payload []*dto.GetComponentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllBasesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*dto.GetComponentResponse, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllBasesInternalServerErrorCode is the HTTP code returned for type GetAllBasesInternalServerError
const GetAllBasesInternalServerErrorCode int = 500

/*GetAllBasesInternalServerError Internal server error

swagger:response getAllBasesInternalServerError
*/
type GetAllBasesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetAllBasesInternalServerError creates GetAllBasesInternalServerError with default headers values
func NewGetAllBasesInternalServerError() *GetAllBasesInternalServerError {

	return &GetAllBasesInternalServerError{}
}

// WithPayload adds the payload to the get all bases internal server error response
func (o *GetAllBasesInternalServerError) WithPayload(payload interface{}) *GetAllBasesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all bases internal server error response
func (o *GetAllBasesInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllBasesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
