// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetPublicActionHandlerFunc turns a function with the right signature into a get public action handler
type GetPublicActionHandlerFunc func(GetPublicActionParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPublicActionHandlerFunc) Handle(params GetPublicActionParams) middleware.Responder {
	return fn(params)
}

// GetPublicActionHandler interface for that can handle valid get public action params
type GetPublicActionHandler interface {
	Handle(GetPublicActionParams) middleware.Responder
}

// NewGetPublicAction creates a new http.Handler for the get public action operation
func NewGetPublicAction(ctx *middleware.Context, handler GetPublicActionHandler) *GetPublicAction {
	return &GetPublicAction{Context: ctx, Handler: handler}
}

/*GetPublicAction swagger:route GET /actions/{name} component getPublicAction

Get Public Action Detail

Get a public action component with all its versions

*/
type GetPublicAction struct {
	Context *middleware.Context
	Handler GetPublicActionHandler
}

func (o *GetPublicAction) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPublicActionParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
