// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetMemberOKCode is the HTTP code returned for type GetMemberOK
const GetMemberOKCode int = 200

/*GetMemberOK Status 200

swagger:response getMemberOK
*/
type GetMemberOK struct {

	/*
	  In: Body
	*/
	Payload *dto.GetMemberResponse `json:"body,omitempty"`
}

// NewGetMemberOK creates GetMemberOK with default headers values
func NewGetMemberOK() *GetMemberOK {

	return &GetMemberOK{}
}

// WithPayload adds the payload to the get member o k response
func (o *GetMemberOK) WithPayload(payload *dto.GetMemberResponse) *GetMemberOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get member o k response
func (o *GetMemberOK) SetPayload(payload *dto.GetMemberResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMemberOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMemberInternalServerErrorCode is the HTTP code returned for type GetMemberInternalServerError
const GetMemberInternalServerErrorCode int = 500

/*GetMemberInternalServerError Internal server error

swagger:response getMemberInternalServerError
*/
type GetMemberInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMemberInternalServerError creates GetMemberInternalServerError with default headers values
func NewGetMemberInternalServerError() *GetMemberInternalServerError {

	return &GetMemberInternalServerError{}
}

// WithPayload adds the payload to the get member internal server error response
func (o *GetMemberInternalServerError) WithPayload(payload interface{}) *GetMemberInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get member internal server error response
func (o *GetMemberInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMemberInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
