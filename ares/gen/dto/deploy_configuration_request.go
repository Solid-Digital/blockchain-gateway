// Code generated by go-swagger; DO NOT EDIT.

package dto

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeployConfigurationRequest deploy configuration request
// swagger:model DeployConfigurationRequest
type DeployConfigurationRequest struct {

	// configuration revision
	// Required: true
	ConfigurationRevision *int64 `json:"configurationRevision"`

	// replicas
	// Minimum: 0
	Replicas *int64 `json:"replicas,omitempty"`
}

func (m *DeployConfigurationRequest) UnmarshalJSON(b []byte) error {
	type DeployConfigurationRequestAlias DeployConfigurationRequest
	var t DeployConfigurationRequestAlias
	if err := json.Unmarshal([]byte("{\"configurationRevision\":-1}"), &t); err != nil {
		return err
	}
	if err := json.Unmarshal(b, &t); err != nil {
		return err
	}
	*m = DeployConfigurationRequest(t)
	return nil
}

// Validate validates this deploy configuration request
func (m *DeployConfigurationRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfigurationRevision(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReplicas(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeployConfigurationRequest) validateConfigurationRevision(formats strfmt.Registry) error {

	if err := validate.Required("configurationRevision", "body", m.ConfigurationRevision); err != nil {
		return err
	}

	return nil
}

func (m *DeployConfigurationRequest) validateReplicas(formats strfmt.Registry) error {

	if swag.IsZero(m.Replicas) { // not required
		return nil
	}

	if err := validate.MinimumInt("replicas", "body", int64(*m.Replicas), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeployConfigurationRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeployConfigurationRequest) UnmarshalBinary(b []byte) error {
	var res DeployConfigurationRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
