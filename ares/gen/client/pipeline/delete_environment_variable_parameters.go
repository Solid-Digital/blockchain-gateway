// Code generated by go-swagger; DO NOT EDIT.

package pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteEnvironmentVariableParams creates a new DeleteEnvironmentVariableParams object
// with the default values initialized.
func NewDeleteEnvironmentVariableParams() *DeleteEnvironmentVariableParams {
	var ()
	return &DeleteEnvironmentVariableParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteEnvironmentVariableParamsWithTimeout creates a new DeleteEnvironmentVariableParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteEnvironmentVariableParamsWithTimeout(timeout time.Duration) *DeleteEnvironmentVariableParams {
	var ()
	return &DeleteEnvironmentVariableParams{

		timeout: timeout,
	}
}

// NewDeleteEnvironmentVariableParamsWithContext creates a new DeleteEnvironmentVariableParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteEnvironmentVariableParamsWithContext(ctx context.Context) *DeleteEnvironmentVariableParams {
	var ()
	return &DeleteEnvironmentVariableParams{

		Context: ctx,
	}
}

// NewDeleteEnvironmentVariableParamsWithHTTPClient creates a new DeleteEnvironmentVariableParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteEnvironmentVariableParamsWithHTTPClient(client *http.Client) *DeleteEnvironmentVariableParams {
	var ()
	return &DeleteEnvironmentVariableParams{
		HTTPClient: client,
	}
}

/*DeleteEnvironmentVariableParams contains all the parameters to send to the API endpoint
for the delete environment variable operation typically these are written to a http.Request
*/
type DeleteEnvironmentVariableParams struct {

	/*EnvName*/
	EnvName string
	/*OrgName*/
	OrgName string
	/*PipelineName*/
	PipelineName string
	/*VarID*/
	VarID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) WithTimeout(timeout time.Duration) *DeleteEnvironmentVariableParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) WithContext(ctx context.Context) *DeleteEnvironmentVariableParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) WithHTTPClient(client *http.Client) *DeleteEnvironmentVariableParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvName adds the envName to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) WithEnvName(envName string) *DeleteEnvironmentVariableParams {
	o.SetEnvName(envName)
	return o
}

// SetEnvName adds the envName to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) SetEnvName(envName string) {
	o.EnvName = envName
}

// WithOrgName adds the orgName to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) WithOrgName(orgName string) *DeleteEnvironmentVariableParams {
	o.SetOrgName(orgName)
	return o
}

// SetOrgName adds the orgName to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) SetOrgName(orgName string) {
	o.OrgName = orgName
}

// WithPipelineName adds the pipelineName to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) WithPipelineName(pipelineName string) *DeleteEnvironmentVariableParams {
	o.SetPipelineName(pipelineName)
	return o
}

// SetPipelineName adds the pipelineName to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) SetPipelineName(pipelineName string) {
	o.PipelineName = pipelineName
}

// WithVarID adds the varID to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) WithVarID(varID int64) *DeleteEnvironmentVariableParams {
	o.SetVarID(varID)
	return o
}

// SetVarID adds the varId to the delete environment variable params
func (o *DeleteEnvironmentVariableParams) SetVarID(varID int64) {
	o.VarID = varID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteEnvironmentVariableParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param envName
	if err := r.SetPathParam("envName", o.EnvName); err != nil {
		return err
	}

	// path param orgName
	if err := r.SetPathParam("orgName", o.OrgName); err != nil {
		return err
	}

	// path param pipelineName
	if err := r.SetPathParam("pipelineName", o.PipelineName); err != nil {
		return err
	}

	// path param varID
	if err := r.SetPathParam("varID", swag.FormatInt64(o.VarID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
