// Code generated by go-swagger; DO NOT EDIT.

package pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// UpdatePipelineReader is a Reader for the UpdatePipeline structure.
type UpdatePipelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePipelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePipelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewUpdatePipelineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdatePipelineOK creates a UpdatePipelineOK with default headers values
func NewUpdatePipelineOK() *UpdatePipelineOK {
	return &UpdatePipelineOK{}
}

/*UpdatePipelineOK handles this case with default header values.

Status 200
*/
type UpdatePipelineOK struct {
	Payload *dto.GetPipelineResponse
}

func (o *UpdatePipelineOK) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/pipelines/{pipelineName}][%d] updatePipelineOK  %+v", 200, o.Payload)
}

func (o *UpdatePipelineOK) GetPayload() *dto.GetPipelineResponse {
	return o.Payload
}

func (o *UpdatePipelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dto.GetPipelineResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePipelineInternalServerError creates a UpdatePipelineInternalServerError with default headers values
func NewUpdatePipelineInternalServerError() *UpdatePipelineInternalServerError {
	return &UpdatePipelineInternalServerError{}
}

/*UpdatePipelineInternalServerError handles this case with default header values.

Internal server error
*/
type UpdatePipelineInternalServerError struct {
	Payload interface{}
}

func (o *UpdatePipelineInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/pipelines/{pipelineName}][%d] updatePipelineInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdatePipelineInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdatePipelineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
