// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetAllBasesReader is a Reader for the GetAllBases structure.
type GetAllBasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllBasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllBasesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetAllBasesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllBasesOK creates a GetAllBasesOK with default headers values
func NewGetAllBasesOK() *GetAllBasesOK {
	return &GetAllBasesOK{}
}

/*GetAllBasesOK handles this case with default header values.

Status 200
*/
type GetAllBasesOK struct {
	Payload []*dto.GetComponentResponse
}

func (o *GetAllBasesOK) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/bases][%d] getAllBasesOK  %+v", 200, o.Payload)
}

func (o *GetAllBasesOK) GetPayload() []*dto.GetComponentResponse {
	return o.Payload
}

func (o *GetAllBasesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllBasesInternalServerError creates a GetAllBasesInternalServerError with default headers values
func NewGetAllBasesInternalServerError() *GetAllBasesInternalServerError {
	return &GetAllBasesInternalServerError{}
}

/*GetAllBasesInternalServerError handles this case with default header values.

Internal server error
*/
type GetAllBasesInternalServerError struct {
	Payload interface{}
}

func (o *GetAllBasesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /orgs/{orgName}/bases][%d] getAllBasesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllBasesInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAllBasesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
