// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// NewUpdateActionVersionParams creates a new UpdateActionVersionParams object
// with the default values initialized.
func NewUpdateActionVersionParams() *UpdateActionVersionParams {
	var ()
	return &UpdateActionVersionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateActionVersionParamsWithTimeout creates a new UpdateActionVersionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateActionVersionParamsWithTimeout(timeout time.Duration) *UpdateActionVersionParams {
	var ()
	return &UpdateActionVersionParams{

		timeout: timeout,
	}
}

// NewUpdateActionVersionParamsWithContext creates a new UpdateActionVersionParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateActionVersionParamsWithContext(ctx context.Context) *UpdateActionVersionParams {
	var ()
	return &UpdateActionVersionParams{

		Context: ctx,
	}
}

// NewUpdateActionVersionParamsWithHTTPClient creates a new UpdateActionVersionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateActionVersionParamsWithHTTPClient(client *http.Client) *UpdateActionVersionParams {
	var ()
	return &UpdateActionVersionParams{
		HTTPClient: client,
	}
}

/*UpdateActionVersionParams contains all the parameters to send to the API endpoint
for the update action version operation typically these are written to a http.Request
*/
type UpdateActionVersionParams struct {

	/*Body*/
	Body *dto.UpdateComponentVersionRequest
	/*Name*/
	Name string
	/*OrgName*/
	OrgName string
	/*Version*/
	Version string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update action version params
func (o *UpdateActionVersionParams) WithTimeout(timeout time.Duration) *UpdateActionVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update action version params
func (o *UpdateActionVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update action version params
func (o *UpdateActionVersionParams) WithContext(ctx context.Context) *UpdateActionVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update action version params
func (o *UpdateActionVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update action version params
func (o *UpdateActionVersionParams) WithHTTPClient(client *http.Client) *UpdateActionVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update action version params
func (o *UpdateActionVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update action version params
func (o *UpdateActionVersionParams) WithBody(body *dto.UpdateComponentVersionRequest) *UpdateActionVersionParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update action version params
func (o *UpdateActionVersionParams) SetBody(body *dto.UpdateComponentVersionRequest) {
	o.Body = body
}

// WithName adds the name to the update action version params
func (o *UpdateActionVersionParams) WithName(name string) *UpdateActionVersionParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the update action version params
func (o *UpdateActionVersionParams) SetName(name string) {
	o.Name = name
}

// WithOrgName adds the orgName to the update action version params
func (o *UpdateActionVersionParams) WithOrgName(orgName string) *UpdateActionVersionParams {
	o.SetOrgName(orgName)
	return o
}

// SetOrgName adds the orgName to the update action version params
func (o *UpdateActionVersionParams) SetOrgName(orgName string) {
	o.OrgName = orgName
}

// WithVersion adds the version to the update action version params
func (o *UpdateActionVersionParams) WithVersion(version string) *UpdateActionVersionParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the update action version params
func (o *UpdateActionVersionParams) SetVersion(version string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateActionVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	// path param orgName
	if err := r.SetPathParam("orgName", o.OrgName); err != nil {
		return err
	}

	// path param version
	if err := r.SetPathParam("version", o.Version); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
