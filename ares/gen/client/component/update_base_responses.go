// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// UpdateBaseReader is a Reader for the UpdateBase structure.
type UpdateBaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewUpdateBaseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateBaseOK creates a UpdateBaseOK with default headers values
func NewUpdateBaseOK() *UpdateBaseOK {
	return &UpdateBaseOK{}
}

/*UpdateBaseOK handles this case with default header values.

Status 200
*/
type UpdateBaseOK struct {
	Payload *dto.GetComponentResponse
}

func (o *UpdateBaseOK) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/bases/{name}][%d] updateBaseOK  %+v", 200, o.Payload)
}

func (o *UpdateBaseOK) GetPayload() *dto.GetComponentResponse {
	return o.Payload
}

func (o *UpdateBaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dto.GetComponentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBaseInternalServerError creates a UpdateBaseInternalServerError with default headers values
func NewUpdateBaseInternalServerError() *UpdateBaseInternalServerError {
	return &UpdateBaseInternalServerError{}
}

/*UpdateBaseInternalServerError handles this case with default header values.

Internal server error
*/
type UpdateBaseInternalServerError struct {
	Payload interface{}
}

func (o *UpdateBaseInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/bases/{name}][%d] updateBaseInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateBaseInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateBaseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
