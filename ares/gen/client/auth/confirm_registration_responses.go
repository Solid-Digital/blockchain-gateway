// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// ConfirmRegistrationReader is a Reader for the ConfirmRegistration structure.
type ConfirmRegistrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfirmRegistrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConfirmRegistrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewConfirmRegistrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewConfirmRegistrationOK creates a ConfirmRegistrationOK with default headers values
func NewConfirmRegistrationOK() *ConfirmRegistrationOK {
	return &ConfirmRegistrationOK{}
}

/*ConfirmRegistrationOK handles this case with default header values.

Status 200
*/
type ConfirmRegistrationOK struct {
	Payload *dto.LoginResponse
}

func (o *ConfirmRegistrationOK) Error() string {
	return fmt.Sprintf("[POST /auth/registration/confirm][%d] confirmRegistrationOK  %+v", 200, o.Payload)
}

func (o *ConfirmRegistrationOK) GetPayload() *dto.LoginResponse {
	return o.Payload
}

func (o *ConfirmRegistrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dto.LoginResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfirmRegistrationInternalServerError creates a ConfirmRegistrationInternalServerError with default headers values
func NewConfirmRegistrationInternalServerError() *ConfirmRegistrationInternalServerError {
	return &ConfirmRegistrationInternalServerError{}
}

/*ConfirmRegistrationInternalServerError handles this case with default header values.

Internal server error
*/
type ConfirmRegistrationInternalServerError struct {
	Payload string
}

func (o *ConfirmRegistrationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /auth/registration/confirm][%d] confirmRegistrationInternalServerError  %+v", 500, o.Payload)
}

func (o *ConfirmRegistrationInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *ConfirmRegistrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
