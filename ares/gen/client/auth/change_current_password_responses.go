// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ChangeCurrentPasswordReader is a Reader for the ChangeCurrentPassword structure.
type ChangeCurrentPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeCurrentPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewChangeCurrentPasswordCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewChangeCurrentPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeCurrentPasswordCreated creates a ChangeCurrentPasswordCreated with default headers values
func NewChangeCurrentPasswordCreated() *ChangeCurrentPasswordCreated {
	return &ChangeCurrentPasswordCreated{}
}

/*ChangeCurrentPasswordCreated handles this case with default header values.

Accepted
*/
type ChangeCurrentPasswordCreated struct {
}

func (o *ChangeCurrentPasswordCreated) Error() string {
	return fmt.Sprintf("[POST /auth/password/change][%d] changeCurrentPasswordCreated ", 201)
}

func (o *ChangeCurrentPasswordCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeCurrentPasswordUnauthorized creates a ChangeCurrentPasswordUnauthorized with default headers values
func NewChangeCurrentPasswordUnauthorized() *ChangeCurrentPasswordUnauthorized {
	return &ChangeCurrentPasswordUnauthorized{}
}

/*ChangeCurrentPasswordUnauthorized handles this case with default header values.

Unauthorized error
*/
type ChangeCurrentPasswordUnauthorized struct {
	Payload interface{}
}

func (o *ChangeCurrentPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[POST /auth/password/change][%d] changeCurrentPasswordUnauthorized  %+v", 401, o.Payload)
}

func (o *ChangeCurrentPasswordUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ChangeCurrentPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
