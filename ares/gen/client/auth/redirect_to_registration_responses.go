// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RedirectToRegistrationReader is a Reader for the RedirectToRegistration structure.
type RedirectToRegistrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RedirectToRegistrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRedirectToRegistrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 301:
		result := NewRedirectToRegistrationMovedPermanently()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRedirectToRegistrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRedirectToRegistrationOK creates a RedirectToRegistrationOK with default headers values
func NewRedirectToRegistrationOK() *RedirectToRegistrationOK {
	return &RedirectToRegistrationOK{}
}

/*RedirectToRegistrationOK handles this case with default header values.

Status 200
*/
type RedirectToRegistrationOK struct {
}

func (o *RedirectToRegistrationOK) Error() string {
	return fmt.Sprintf("[POST /auth/registration-redirect][%d] redirectToRegistrationOK ", 200)
}

func (o *RedirectToRegistrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectToRegistrationMovedPermanently creates a RedirectToRegistrationMovedPermanently with default headers values
func NewRedirectToRegistrationMovedPermanently() *RedirectToRegistrationMovedPermanently {
	return &RedirectToRegistrationMovedPermanently{}
}

/*RedirectToRegistrationMovedPermanently handles this case with default header values.

Redirect to connect registration page
*/
type RedirectToRegistrationMovedPermanently struct {
}

func (o *RedirectToRegistrationMovedPermanently) Error() string {
	return fmt.Sprintf("[POST /auth/registration-redirect][%d] redirectToRegistrationMovedPermanently ", 301)
}

func (o *RedirectToRegistrationMovedPermanently) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectToRegistrationInternalServerError creates a RedirectToRegistrationInternalServerError with default headers values
func NewRedirectToRegistrationInternalServerError() *RedirectToRegistrationInternalServerError {
	return &RedirectToRegistrationInternalServerError{}
}

/*RedirectToRegistrationInternalServerError handles this case with default header values.

Internal Service Error
*/
type RedirectToRegistrationInternalServerError struct {
	Payload interface{}
}

func (o *RedirectToRegistrationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /auth/registration-redirect][%d] redirectToRegistrationInternalServerError  %+v", 500, o.Payload)
}

func (o *RedirectToRegistrationInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *RedirectToRegistrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
