// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ConfirmResetPasswordReader is a Reader for the ConfirmResetPassword structure.
type ConfirmResetPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfirmResetPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConfirmResetPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewConfirmResetPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewConfirmResetPasswordOK creates a ConfirmResetPasswordOK with default headers values
func NewConfirmResetPasswordOK() *ConfirmResetPasswordOK {
	return &ConfirmResetPasswordOK{}
}

/*ConfirmResetPasswordOK handles this case with default header values.

Status 200
*/
type ConfirmResetPasswordOK struct {
}

func (o *ConfirmResetPasswordOK) Error() string {
	return fmt.Sprintf("[POST /auth/password/reset/confirm][%d] confirmResetPasswordOK ", 200)
}

func (o *ConfirmResetPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConfirmResetPasswordUnauthorized creates a ConfirmResetPasswordUnauthorized with default headers values
func NewConfirmResetPasswordUnauthorized() *ConfirmResetPasswordUnauthorized {
	return &ConfirmResetPasswordUnauthorized{}
}

/*ConfirmResetPasswordUnauthorized handles this case with default header values.

Status 401
*/
type ConfirmResetPasswordUnauthorized struct {
	Payload interface{}
}

func (o *ConfirmResetPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[POST /auth/password/reset/confirm][%d] confirmResetPasswordUnauthorized  %+v", 401, o.Payload)
}

func (o *ConfirmResetPasswordUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ConfirmResetPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
