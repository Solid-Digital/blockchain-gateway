// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// ResetPasswordReader is a Reader for the ResetPassword structure.
type ResetPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResetPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewResetPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewResetPasswordOK creates a ResetPasswordOK with default headers values
func NewResetPasswordOK() *ResetPasswordOK {
	return &ResetPasswordOK{}
}

/*ResetPasswordOK handles this case with default header values.

Status 200
*/
type ResetPasswordOK struct {
	Payload *dto.ResetPasswordResponse
}

func (o *ResetPasswordOK) Error() string {
	return fmt.Sprintf("[POST /auth/password/reset][%d] resetPasswordOK  %+v", 200, o.Payload)
}

func (o *ResetPasswordOK) GetPayload() *dto.ResetPasswordResponse {
	return o.Payload
}

func (o *ResetPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dto.ResetPasswordResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetPasswordUnauthorized creates a ResetPasswordUnauthorized with default headers values
func NewResetPasswordUnauthorized() *ResetPasswordUnauthorized {
	return &ResetPasswordUnauthorized{}
}

/*ResetPasswordUnauthorized handles this case with default header values.

Status 401
*/
type ResetPasswordUnauthorized struct {
	Payload interface{}
}

func (o *ResetPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[POST /auth/password/reset][%d] resetPasswordUnauthorized  %+v", 401, o.Payload)
}

func (o *ResetPasswordUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ResetPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
