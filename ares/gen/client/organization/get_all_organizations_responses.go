// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	dto "bitbucket.org/unchain/ares/gen/dto"
)

// GetAllOrganizationsReader is a Reader for the GetAllOrganizations structure.
type GetAllOrganizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllOrganizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllOrganizationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetAllOrganizationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllOrganizationsOK creates a GetAllOrganizationsOK with default headers values
func NewGetAllOrganizationsOK() *GetAllOrganizationsOK {
	return &GetAllOrganizationsOK{}
}

/*GetAllOrganizationsOK handles this case with default header values.

Status 200
*/
type GetAllOrganizationsOK struct {
	Payload []*dto.GetOrganizationResponse
}

func (o *GetAllOrganizationsOK) Error() string {
	return fmt.Sprintf("[GET /orgs][%d] getAllOrganizationsOK  %+v", 200, o.Payload)
}

func (o *GetAllOrganizationsOK) GetPayload() []*dto.GetOrganizationResponse {
	return o.Payload
}

func (o *GetAllOrganizationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllOrganizationsInternalServerError creates a GetAllOrganizationsInternalServerError with default headers values
func NewGetAllOrganizationsInternalServerError() *GetAllOrganizationsInternalServerError {
	return &GetAllOrganizationsInternalServerError{}
}

/*GetAllOrganizationsInternalServerError handles this case with default header values.

Internal server error
*/
type GetAllOrganizationsInternalServerError struct {
	Payload interface{}
}

func (o *GetAllOrganizationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /orgs][%d] getAllOrganizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllOrganizationsInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAllOrganizationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
